All Superlinear Inverse Schemes are coNP-Hard

  How hard is it to invert NP-problems? We show that all superlinearlycertified inverses of NP problems are coNP-hard. To do so, we develop a novelproof technique that builds diagonalizations against certificates directly intoa circuit.

A Richer Understanding of the Complexity of Election Systems

  We provide an overview of some recent progress on the complexity of electionsystems. The issues studied include the complexity of the winner, manipulation,bribery, and control problems.

Downward Collapse from a Weaker Hypothesis

  Hemaspaandra et al. proved that, for $m > 0$ and $0 < i < k - 1$: if$\Sigma_i^p \BoldfaceDelta DIFF_m(\Sigma_k^p)$ is closed under complementation,then $DIFF_m(\Sigma_k^p) = coDIFF_m(\Sigma_k^p)$. This sharply asymmetricresult fails to apply to the case in which the hypothesis is weakened byallowing the $\Sigma_i^p$ to be replaced by any class in its differencehierarchy. We so extend the result by proving that, for $s,m > 0$ and $0 < i <k - 1$: if $DIFF_s(\Sigma_i^p) \BoldfaceDelta DIFF_m(\Sigma_k^p)$ is closedunder complementation, then $DIFF_m(\Sigma_k^p) = coDIFF_m(\Sigma_k^p)$.

On the Power of Positive Turing Reductions

  In the early 1980s, Selman's seminal work on positive Turing reductionsshowed that positive Turing reduction to NP yields no greater computationalpower than NP itself. Thus, positive Turing and Turing reducibility to NPdiffer sharply unless the polynomial hierarchy collapses.  We show that the situation is quite different for DP, the next level of theboolean hierarchy. In particular, positive Turing reduction to DP alreadyyields all (and only) sets Turing reducibility to NP. Thus, positive Turing andTuring reducibility to DP yield the same class. Additionally, we show that aneven weaker class, P(NP[1]), can be substituted for DP in this context.

Almost-Everywhere Superiority for Quantum Computing

  Simon as extended by Brassard and H{\o}yer shows that there are tasks onwhich polynomial-time quantum machines are exponentially faster than eachclassical machine infinitely often. The present paper shows that there aretasks on which polynomial-time quantum machines are exponentially faster thaneach classical machine almost everywhere.

Weighted Electoral Control

  Although manipulation and bribery have been extensively studied underweighted voting, there has been almost no work done on election control underweighted voting. This is unfortunate, since weighted voting appears in manyimportant natural settings. In this paper, we study the complexity ofcontrolling the outcome of weighted elections through adding and deletingvoters. We obtain polynomial-time algorithms, NP-completeness results, and formany NP-complete cases, approximation algorithms. In particular, for scoringrules we completely characterize the complexity of weighted voter control. Ourwork shows that for quite a few important cases, either polynomial-time exactalgorithms or polynomial-time approximation algorithms exist.

What's Up with Downward Collapse: Using the Easy-Hard Technique to Link  Boolean and Polynomial Hierarchy Collapses

  During the past decade, nine papers have obtained increasingly strongconsequences from the assumption that boolean or bounded-query hierarchiescollapse. The final four papers of this nine-paper progression actually achievedownward collapse---that is, they show that high-level collapses inducecollapses at (what beforehand were thought to be) lower complexity levels. Forexample, for each $k\geq 2$ it is now known that if $\psigkone=\psigktwo$ then$\ph=\sigmak$. This article surveys the history, the results, and thetechnique---the so-called easy-hard method---of these nine papers.

A Downward Collapse within the Polynomial Hierarchy

  Downward collapse (a.k.a. upward separation) refers to cases where theequality of two larger classes implies the equality of two smaller classes. Weprovide an unqualified downward collapse result completely within thepolynomial hierarchy. In particular, we prove that, for k > 2, if $\psigkone =\psigktwo$ then $\sigmak = \pik = \ph$. We extend this to obtain a more generaldownward collapse result.

A Simplest Undecidable Modal Logic

  Modal logics are widely used in computer science. The complexity of theirsatisfiability problems has been an active field of research since the 1970s.We prove that even very "simple" modal logics can be undecidable: We show thatthere is an undecidable modal logic that can be obtained by restricting theallowed models with a first-order formula in which only universal quantifiersappear.

Dichotomy Theorems for Alternation-Bounded Quantified Boolean Formulas

  In 1978, Schaefer proved his famous dichotomy theorem for generalizedsatisfiability problems. He defined an infinite number of propositionalsatisfiability problems, showed that all these problems are either in P orNP-complete, and gave a simple criterion to determine which of the two casesholds. This result is surprising in light of Ladner's theorem, which impliesthat there are an infinite number of complexity classes between P andNP-complete (under the assumption that P is not equal to NP).  Schaefer also stated a dichotomy theorem for quantified generalized Booleanformulas, but this theorem was only recently proven by Creignou, Khanna, andSudan, and independently by Dalmau: Determining truth of quantified Booleanformulas is either PSPACE-complete or in P.  This paper looks at alternation-bounded quantified generalized Booleanformulas. In their unrestricted forms, these problems are the canonicalproblems complete for the levels of the polynomial hierarchy. In this paper, weprove dichotomy theorems for alternation-bounded quantified generalized Booleanformulas, by showing that these problems are either $\Sigma_i^p$-complete or inP, and we give a simple criterion to determine which of the two cases holds.This is the first result that obtains dichotomy for an infinite number ofclasses at once.

An Introduction to Query Order

  Hemaspaandra, Hempel, and Wechsung [cs.CC/9909020] raised the followingquestions: If one is allowed one question to each of two different informationsources, does the order in which one asks the questions affect the class ofproblems that one can solve with the given access? If so, which order yieldsthe greater computational power?  The answers to these questions have been learned-inasfar as they can belearned without resolving whether or not the polynomial hierarchy collapses-forboth the polynomial hierarchy and the boolean hierarchy. In the polynomialhierarchy, query order never matters. In the boolean hierarchy, query ordersometimes does not matter and, unless the polynomial hierarchy collapses,sometimes does matter. Furthermore, the study of query order has yieldeddividends in seemingly unrelated areas, such as bottleneck computations anddownward translation of equality.  In this article, we present some of the central results on query order. Thearticle is written in such a way as to encourage the reader to try his or herown hand at proving some of these results. We also give literature pointers tothe quickly growing set of related results and applications.

Query Order and the Polynomial Hierarchy

  Hemaspaandra, Hempel, and Wechsung [cs.CC/9909020] initiated the field ofquery order, which studies the ways in which computational power is affected bythe order in which information sources are accessed. The present paper studies,for the first time, query order as it applies to the levels of the polynomialhierarchy. We prove that the levels of the polynomial hierarchy areorder-oblivious. Yet, we also show that these ordered query classes form newlevels in the polynomial hierarchy unless the polynomial hierarchy collapses.We prove that all leaf language classes - and thus essentially all standardcomplexity classes - inherit all order-obliviousness results that hold for P.

Dichotomy for Voting Systems

  Scoring protocols are a broad class of voting systems. Each is defined by avector $(\alpha_1,\alpha_2,...,\alpha_m)$, $\alpha_1 \geq \alpha_2 \geq >...\geq \alpha_m$, of integers such that each voter contributes $\alpha_1$ pointsto his/her first choice, $\alpha_2$ points to his/her second choice, and so on,and any candidate receiving the most points is a winner.  What is it about scoring-protocol election systems that makes some have thedesirable property of being NP-complete to manipulate, while others can bemanipulated in polynomial time? We find the complete, dichotomizing answer:Diversity of dislike. Every scoring-protocol election system having two or morepoint values assigned to candidates other than the favorite--i.e., having$||\{\alpha_i \condition 2 \leq i \leq m\}||\geq 2$--is NP-complete tomanipulate. Every other scoring-protocol election system can be manipulated inpolynomial time. In effect, we show that--other than trivial systems (where allcandidates alway tie), plurality voting, and plurality voting's transparentlydisguised translations--\emph{every} scoring-protocol election system isNP-complete to manipulate.

The Complexity of Kings

  A king in a directed graph is a node from which each node in the graph can bereached via paths of length at most two. There is a broad literature ontournaments (completely oriented digraphs), and it has been known for more thanhalf a century that all tournaments have at least one king [Lan53]. Recently,kings have proven useful in theoretical computer science, in particular in thestudy of the complexity of the semifeasible sets [HNP98,HT05] and in the studyof the complexity of reachability problems [Tan01,NT02].  In this paper, we study the complexity of recognizing kings. For eachsuccinctly specified family of tournaments, the king problem is known to belongto $\Pi_2^p$ [HOZZ]. We prove that this bound is optimal: We construct asuccinctly specified tournament family whose king problem is$\Pi_2^p$-complete. It follows easily from our proof approach that the problemof testing kingship in succinctly specified graphs (which need not betournaments) is $\Pi_2^p$-complete. We also obtain $\Pi_2^p$-completenessresults for k-kings in succinctly specified j-partite tournaments, $k,j \geq2$, and we generalize our main construction to show that $\Pi_2^p$-completenessholds for testing k-kingship in succinctly specified families of tournamentsfor all $k \geq 2$.

Hybrid Elections Broaden Complexity-Theoretic Resistance to Control

  Electoral control refers to attempts by an election's organizer ("the chair")to influence the outcome by adding/deleting/partitioning voters or candidates.The groundbreaking work of Bartholdi, Tovey, and Trick [BTT92] on(constructive) control proposes computational complexity as a means ofresisting control attempts: Look for election systems where the chair's task inseeking control is itself computationally infeasible.  We introduce and study a method of combining two or more candidate-anonymouselection schemes in such a way that the combined scheme possesses all theresistances to control (i.e., all the NP-hardnesses of control) possessed byany of its constituents: It combines their strengths. From this and newresistance constructions, we prove for the first time that there exists anelection scheme that is resistant to all twenty standard types of electoralcontrol.

Search versus Decision for Election Manipulation Problems

  Most theoretical definitions about the complexity of manipulating electionsfocus on the decision problem of recognizing which instances can besuccessfully manipulated, rather than the search problem of finding thesuccessful manipulative actions. Since the latter is a far more natural goalfor manipulators, that definitional focus may be misguided if these twocomplexities can differ. Our main result is that they probably do differ: Ifinteger factoring is hard, then for election manipulation, election bribery,and some types of election control, there are election systems for whichrecognizing which instances can be successfully manipulated is in polynomialtime but producing the successful manipulations cannot be done in polynomialtime.

X THEN X: Manipulation of Same-System Runoff Elections

  Do runoff elections, using the same voting rule as the initial election butjust on the winning candidates, increase or decrease the complexity ofmanipulation? Does allowing revoting in the runoff increase or decrease thecomplexity relative to just having a runoff without revoting? For both weightedand unweighted voting, we show that even for election systems with simplewinner problems the complexity of manipulation, manipulation with runoffs, andmanipulation with revoting runoffs are independent, in the abstract. On theother hand, for some important, well-known election systems we determine whatholds for each of these cases. For no such systems do we find runoffs loweringcomplexity, and for some we find that runoffs raise complexity. Ours is thefirst paper to show that for natural, unweighted election systems, runoffs canincrease the manipulation complexity.

Control in the Presence of Manipulators: Cooperative and Competitive  Cases

  Control and manipulation are two of the most studied types of attacks onelections. In this paper, we study the complexity of control attacks onelections in which there are manipulators. We study both the case where the"chair" who is seeking to control the election is allied with the manipulators,and the case where the manipulators seek to thwart the chair. In the lattercase, we see that the order of play substantially influences the complexity. Weprove upper bounds, holding over every election system with a polynomial-timewinner problem, for all standard control cases, and some of these bounds are atthe second or third level of the polynomial hierarchy, and we provide matchinglower bounds to prove these tight. Nonetheless, for important natural systemsthe complexity can be much lower. We prove that for approval and pluralityelections, the complexity of even competitive clashes between a controller andmanipulators falls far below those high bounds, even as low as polynomial time.Yet for a Borda-voting case we show that such clashes raise the complexityunless NP = coNP.

Complexity Dichotomies for Unweighted Scoring Rules

  Scoring systems are an extremely important class of election systems. Westudy the complexity of manipulation, constructive control by deleting voters(CCDV), and bribery for scoring systems.  For manipulation, we show that for all scoring rules with a constant numberof different coefficients, manipulation is in P. And we conjecture that thereis no dichotomy theorem.  On the other hand, we obtain dichotomy theorems for CCDV and bribery problem.More precisely, we show that both of these problems are easy for 1-approval,2-approval, 1-veto, 2-veto, 3-veto, generalized 2-veto, and (2,1,...,1,0), andhard in all other cases. These results are the "dual" of the dichotomy theoremfor the constructive control by adding voters (CCAV) problem from(Hemaspaandra, Hemaspaandra, Schnoor, AAAI 2014), but do not at all follow fromthat result. In particular, proving hardness for CCDV is harder than for CCAVsince we do not have control over what the controller can delete, and provingeasiness for bribery tends to be harder than for control, since bribery can beviewed as control followed by manipulation.

Credimus

  We believe that economic design and computational complexity---while alreadyimportant to each other---should become even more important to each other witheach passing year. But for that to happen, experts in on the one hand suchareas as social choice, economics, and political science and on the other handcomputational complexity will have to better understand each other'sworldviews.  This article, written by two complexity theorists who also work incomputational social choice theory, focuses on one direction of that process bypresenting a brief overview of how most computational complexity theorists viewthe world. Although our immediate motivation is to make the lens through whichcomplexity theorists see the world be better understood by those in the socialsciences, we also feel that even within computer science it is very importantfor nontheoreticians to understand how theoreticians think, just as it isequally important within computer science for theoreticians to understand hownontheoreticians think.

Using the No-Search Easy-Hard Technique for Downward Collapse

  The top part of the preceding figure [figure appears in actual paper] showssome classes from the (truth-table) bounded-query and boolean hierarchies. Itis well-known that if either of these hierarchies collapses at a given level,then all higher levels of that hierarchy collapse to that same level. This is astandard ``upward translation of equality'' that has been known for over adecade. The issue of whether these hierarchies can translate equality {\emdownwards\/} has proven vastly more challenging. In particular, with regard tothe figure above, consider the following claim:  $$P_{m-tt}^{\Sigma_k^p} = P_{m+1-tt}^{\Sigma_k^p} \implies  DIFF_m(\Sigma_k^p) coDIFF_m(\Sigma_k^p) = BH(\Sigma_k^p). (*) $$  This claim, if true, says that equality translates downwards between levelsof the bounded-query hierarchy and the boolean hierarchy levels that (beforethe fact) are immediately below them.  Until recently, it was not known whether (*) {\em ever\/} held, except forthe degenerate cases $m=0$ and $k=0$. Then Hemaspaandra, Hemaspaandra, andHempel \cite{hem-hem-hem:j:downward-translation} proved that (*) holds for all$m$, for $k > 2$. Buhrman and Fortnow~\cite{buh-for:j:two-queries} then showedthat, when $k=2$, (*) holds for the case $m = 1$. In this paper, we prove thatfor the case $k=2$, (*) holds for all values of $m$. Since there is an oraclerelative to which ``for $k=1$, (*) holds for all $m$'' fails\cite{buh-for:j:two-queries}, our achievement of the $k=2$ case cannot to bestrengthened to $k=1$ by any relativizable proof technique. The new downwardtranslation we obtain also tightens the collapse in the polynomial hierarchyimplied by a collapse in the bounded-query hierarchy of the second level of thepolynomial hierarchy.

Recognizing When Heuristics Can Approximate Minimum Vertex Covers Is  Complete for Parallel Access to NP

  For both the edge deletion heuristic and the maximum-degree greedy heuristic,we study the problem of recognizing those graphs for which that heuristic canapproximate the size of a minimum vertex cover within a constant factor of r,where r is a fixed rational number. Our main results are that these problemsare complete for the class of problems solvable via parallel access to NP. Toachieve these main results, we also show that the restriction of the vertexcover problem to those graphs for which either of these heuristics can find anoptimal solution remains NP-hard.

Isomorphic Implication

  We study the isomorphic implication problem for Boolean constraints. We showthat this is a natural analog of the subgraph isomorphism problem. We provethat, depending on the set of constraints, this problem is in P, NP-complete,or NP-hard, coNP-hard, and in parallel access to NP. We show how to extend theNP-hardness and coNP-hardness to hardness for parallel access to NP for somecases, and conjecture that this can be done in all cases.

On the Complexity of Elementary Modal Logics

  Modal logics are widely used in computer science. The complexity of modalsatisfiability problems has been investigated since the 1970s, usually provingresults on a case-by-case basis. We prove a very general classification for awide class of relevant logics: Many important subclasses of modal logics can beobtained by restricting the allowed models with first-order Horn formulas. Weshow that the satisfiability problem for each of these logics is eitherNP-complete or PSPACE-hard, and exhibit a simple classification criterion.Further, we prove matching PSPACE upper bounds for many of the PSPACE-hardlogics.

Minimization for Generalized Boolean Formulas

  The minimization problem for propositional formulas is an importantoptimization problem in the second level of the polynomial hierarchy. Ingeneral, the problem is Sigma-2-complete under Turing reductions, butrestricted versions are tractable. We study the complexity of minimization forformulas in two established frameworks for restricted propositional logic: ThePost framework allowing arbitrarily nested formulas over a set of Booleanconnectors, and the constraint setting, allowing generalizations of CNFformulas. In the Post case, we obtain a dichotomy result: Minimization issolvable in polynomial time or coNP-hard. This result also applies to Booleancircuits. For CNF formulas, we obtain new minimization algorithms for a largeclass of formulas, and give strong evidence that we have covered allpolynomial-time cases.

Complexity of Manipulative Actions When Voting with Ties

  Most of the computational study of election problems has assumed that eachvoter's preferences are, or should be extended to, a total order. However inpractice voters may have preferences with ties. We study the complexity ofmanipulative actions on elections where voters can have ties, extending thedefinitions of the election systems (when necessary) to handle voters withties. We show that for natural election systems allowing ties can both increaseand decrease the complexity of manipulation and bribery, and we state a generalresult on the effect of voters with ties on the complexity of control.

The Complexity of Poor Man's Logic

  Motivated by description logics, we investigate what happens to thecomplexity of modal satisfiability problems if we only allow formulas builtfrom literals, $\wedge$, $\Diamond$, and $\Box$. Previously, the only knownresult was that the complexity of the satisfiability problem for K dropped fromPSPACE-complete to coNP-complete (Schmidt-Schauss and Smolka, 1991 and Doniniet al., 1992). In this paper we show that not all modal logics behave like K.In particular, we show that the complexity of the satisfiability problem withrespect to frames in which each world has at least one successor drops fromPSPACE-complete to P, but that in contrast the satisfiability problem withrespect to the class of frames in which each world has at most two successorsremains PSPACE-complete. As a corollary of the latter result, we also solve theopen problem from Donini et al.'s complexity classification of descriptionlogics (Donini et al., 1997). In the last section, we classify the complexityof the satisfiability problem for K for all other restrictions on the set ofoperators.

Exact Analysis of Dodgson Elections: Lewis Carroll's 1876 Voting System  is Complete for Parallel Access to NP

  In 1876, Lewis Carroll proposed a voting system in which the winner is thecandidate who with the fewest changes in voters' preferences becomes aCondorcet winner---a candidate who beats all other candidates in pairwisemajority-rule elections. Bartholdi, Tovey, and Trick provided a lowerbound---NP-hardness---on the computational complexity of determining theelection winner in Carroll's system. We provide a stronger lower bound and anupper bound that matches our lower bound. In particular, determining the winnerin Carroll's system is complete for parallel access to NP, i.e., it is completefor $\thetatwo$, for which it becomes the most natural complete problem known.It follows that determining the winner in Carroll's elections is notNP-complete unless the polynomial hierarchy collapses.

Raising NP Lower Bounds to Parallel NP Lower Bounds

  A decade ago, a beautiful paper by Wagner developed a ``toolkit'' that incertain cases allows one to prove problems hard for parallel access to NP.However, the problems his toolkit applies to most directly are not overlynatural. During the past year, problems that previously were known only to beNP-hard or coNP-hard have been shown to be hard even for the class of setssolvable via parallel access to NP. Many of these problems are longstanding andextremely natural, such as the Minimum Equivalent Expression problem (which wasthe original motivation for creating the polynomial hierarchy), the problem ofdetermining the winner in the election system introduced by Lewis Carroll in1876, and the problem of determining on which inputs heuristic algorithmsperform well. In the present article, we survey this recent progress in raisinglower bounds.

R_{1-tt}^{SN}(NP) Distinguishes Robust Many-One and Turing Completeness

  Do complexity classes have many-one complete sets if and only if they haveTuring-complete sets? We prove that there is a relativized world in which arelatively natural complexity class-namely a downward closure of NP, \rsnnp -has Turing-complete sets but has no many-one complete sets. In fact, we showthat in the same relativized world this class has 2-truth-table complete setsbut lacks 1-truth-table complete sets. As part of the groundwork for ourresult, we prove that \rsnnp has many equivalent forms having to do withordered and parallel access to $\np$ and $\npinterconp$.

Translating Equality Downwards

  Downward translation of equality refers to cases where a collapse of somepair of complexity classes would induce a collapse of some other pair ofcomplexity classes that (a priori) one expects are smaller. Recently, the firstdownward translation of equality was obtained that applied to the polynomialhierarchy-in particular, to bounded access to its levels [cs.CC/9910007]. Inthis paper, we provide a much broader downward translation that extends notonly that downward translation but also that translation's elegant enhancementby Buhrman and Fortnow. Our work also sheds light on previous research on thestructure of refined polynomial hierarchies, and strengthens the connectionbetween the collapse of bounded query hierarchies and the collapse of thepolynomial hierarchy.

Multimode Control Attacks on Elections

  In 1992, Bartholdi, Tovey, and Trick opened the study of control attacks onelections---attempts to improve the election outcome by such actions asadding/deleting candidates or voters. That work has led to many results on howalgorithms can be used to find attacks on elections and howcomplexity-theoretic hardness results can be used as shields against attacks.However, all the work in this line has assumed that the attacker employs just asingle type of attack. In this paper, we model and study the case in which theattacker launches a multipronged (i.e., multimode) attack. We do so to morerealistically capture the richness of real-life settings. For example, anattacker might simultaneously try to suppress some voters, attract new votersinto the election, and introduce a spoiler candidate. Our model provides aunified framework for such varied attacks, and by constructing polynomial-timemultiprong attack algorithms we prove that for various election systems evensuch concerted, flexible attacks can be perfectly planned in deterministicpolynomial time.

The Complexity of Manipulative Attacks in Nearly Single-Peaked  Electorates

  Many electoral bribery, control, and manipulation problems (which we willrefer to in general as "manipulative actions" problems) are NP-hard in thegeneral case. It has recently been noted that many of these problems fall intopolynomial time if the electorate is single-peaked (i.e., is polarized alongsome axis/issue). However, real-world electorates are not truly single-peaked.There are usually some mavericks, and so real-world electorates tend to merelybe nearly single-peaked. This paper studies the complexity ofmanipulative-action algorithms for elections over nearly single-peakedelectorates, for various notions of nearness and various election systems. Weprovide instances where even one maverick jumps the manipulative-actioncomplexity up to $\np$-hardness, but we also provide many instances where areasonable number of mavericks can be tolerated without increasing themanipulative-action complexity.

The Complexity of Controlling Candidate-Sequential Elections

  Candidate control of elections is the study of how adding or removingcandidates can affect the outcome. However, the traditional study of thecomplexity of candidate control is in the model in which all candidates andvotes are known up front. This paper develops a model for studying onlinecontrol for elections where the structure is sequential with respect to thecandidates, and in which the decision regarding adding and deleting must beirrevocably made at the moment the candidate is presented. We show that greatcomplexity---PSPACE-completeness---can occur in this setting, but we alsoprovide within this setting polynomial-time algorithms for the most importantof election systems, plurality.

Complexity Results in Graph Reconstruction

  We investigate the relative complexity of the graph isomorphism problem (GI)and problems related to the reconstruction of a graph from its vertex-deletedor edge-deleted subgraphs (in particular, deck checking (DC) and legitimatedeck (LD) problems). We show that these problems are closely related for allamounts $c \geq 1$ of deletion:  1) $GI \equiv^{l}_{iso} VDC_{c}$, $GI \equiv^{l}_{iso} EDC_{c}$, $GI\leq^{l}_{m} LVD_c$, and $GI \equiv^{p}_{iso} LED_c$.  2) For all $k \geq 2$, $GI \equiv^{p}_{iso} k-VDC_c$ and $GI \equiv^{p}_{iso}k-EDC_c$.  3) For all $k \geq 2$, $GI \leq^{l}_{m} k-LVD_c$.  4)$GI \equiv^{p}_{iso} 2-LVC_c$.  5) For all $k \geq 2$, $GI \equiv^{p}_{iso} k-LED_c$.  For many of these results, even the $c = 1$ case was not previously known.  Similar to the definition of reconstruction numbers $vrn_{\exists}(G)$ [HP85]and $ern_{\exists}(G)$ (see page 120 of [LS03]), we introduce two new graphparameters, $vrn_{\forall}(G)$ and $ern_{\forall}(G)$, and give an example of afamily $\{G_n\}_{n \geq 4}$ of graphs on $n$ vertices for which$vrn_{\exists}(G_n) < vrn_{\forall}(G_n)$. For every $k \geq 2$ and $n \geq 1$,we show that there exists a collection of $k$ graphs on $(2^{k-1}+1)n+k$vertices with $2^{n}$ 1-vertex-preimages, i.e., one has families of graphcollections whose number of 1-vertex-preimages is huge relative to the size ofthe graphs involved.

Anyone but Him: The Complexity of Precluding an Alternative

  Preference aggregation in a multiagent setting is a central issue in bothhuman and computer contexts. In this paper, we study in terms of complexity thevulnerability of preference aggregation to destructive control. That is, westudy the ability of an election's chair to, through such mechanisms asvoter/candidate addition/suppression/partition, ensure that a particularcandidate (equivalently, alternative) does not win. And we study the extent towhich election systems can make it impossible, or computationally costly(NP-complete), for the chair to execute such control. Among the systems westudy--plurality, Condorcet, and approval voting--we find cases where systemsimmune or computationally resistant to a chair choosing the winner nonethelessare vulnerable to the chair blocking a victory. Beyond that, we see that amongour studied systems no one system offers the best protection againstdestructive control. Rather, the choice of a preference aggregation system willdepend closely on which types of control one wishes to be protected against. Wealso find concrete cases where the complexity of or susceptibility to controlvaries dramatically based on the choice among natural tie-handling rules.

How Hard Is Bribery in Elections?

  We study the complexity of influencing elections through bribery: Howcomputationally complex is it for an external actor to determine whether by acertain amount of bribing voters a specified candidate can be made theelection's winner? We study this problem for election systems as varied asscoring protocols and Dodgson voting, and in a variety of settings regardinghomogeneous-vs.-nonhomogeneous electorate bribability,bounded-size-vs.-arbitrary-sized candidate sets, weighted-vs.-unweightedvoters, and succinct-vs.-nonsuccinct input specification. We obtain bothpolynomial-time bribery algorithms and proofs of the intractability of bribery,and indeed our results show that the complexity of bribery is extremelysensitive to the setting. For example, we find settings in which bribery isNP-complete but manipulation (by voters) is in P, and we find settings in whichbribing weighted voters is NP-complete but bribing voters with individual bribethresholds is in P. For the broad class of elections (including plurality,Borda, k-approval, and veto) known as scoring protocols, we prove a dichotomyresult for bribery of weighted voters: We find a simple-to-evaluate conditionthat classifies every case as either NP-complete or in P.

Llull and Copeland Voting Computationally Resist Bribery and Control

  The only systems previously known to be resistant to all the standard controltypes were highly artificial election systems created by hybridization. Westudy a parameterized version of Copeland voting, denoted by Copeland^\alpha,where the parameter \alpha is a rational number between 0 and 1 that specifieshow ties are valued in the pairwise comparisons of candidates. We prove thatCopeland^{0.5}, the system commonly referred to as "Copeland voting," providesfull resistance to constructive control, and we prove the same forCopeland^\alpha, for all rational \alpha, 0 < \alpha < 1. Copeland voting isthe first natural election system proven to have full resistance toconstructive control. We also prove that both Copeland^1 (Llull elections) andCopeland^0 are resistant to all standard types of constructive control otherthan one variant of addition of candidates. Moreover, we show that for eachrational \alpha, 0 \leq \alpha \leq 1, Copeland^\alpha voting is fullyresistant to bribery attacks, and we establish fixed-parameter tractability ofbounded-case control for Copeland^\alpha. We also study Copeland^\alphaelections under more flexible models such as microbribery and extended controland we integrate the potential irrationality of voter preferences into many ofour results.

A Control Dichotomy for Pure Scoring Rules

  Scoring systems are an extremely important class of election systems. Alength-$m$ (so-called) scoring vector applies only to $m$-candidate elections.To handle general elections, one must use a family of vectors, one per length.The most elegant approach to making sure such families are "family-like" is therecently introduced notion of (polynomial-time uniform) pure scoring rules[Betzler and Dorn 2010], where each scoring vector is obtained from itsprecursor by adding one new coefficient. We obtain the first dichotomy theoremfor pure scoring rules for a control problem. In particular, for constructivecontrol by adding voters (CCAV), we show that CCAV is solvable in polynomialtime for $k$-approval with $k \leq 3$, $k$-veto with $k \leq 2$, every purescoring rule in which only the two top-rated candidates gain nonzero scores,and a particular rule that is a "hybrid" of 1-approval and 1-veto. For allother pure scoring rules, CCAV is NP-complete. We also investigate thedescriptive richness of different models for defining pure scoring rules,proving how more rule-generation time gives more rules, proving that rationalsgive more rules than do the natural numbers, and proving that some restrictionspreviously thought to be "w.l.o.g." in fact do lose generality.

More Natural Models of Electoral Control by Partition

  "Control" studies attempts to set the outcome of elections through theaddition, deletion, or partition of voters or candidates. The set of benchmarkcontrol types was largely set in the seminal 1992 paper by Bartholdi, Tovey,and Trick that introduced control, and there now is a large literature studyinghow many of the benchmark types various election systems are vulnerable to,i.e., have polynomial-time attack algorithms for.  However, although the longstanding benchmark models of addition and deletionmodel relatively well the real-world settings that inspire them, thelongstanding benchmark models of partition model settings that are arguablyquite distant from those they seek to capture.  In this paper, we introduce--and for some important cases analyze thecomplexity of--new partition models that seek to better capture many real-worldpartition settings. In particular, in many partition settings one wants the twoparts of the partition to be of (almost) equal size, or is partitioning intomore than two parts, or has groups of actors who must be placed in the samepart of the partition. Our hope is that having these new partition types willallow studies of control attacks to include such models that more realisticallycapture many settings.

The Robustness of LWPP and WPP, with an Application to Graph  Reconstruction

  We show that the counting class LWPP [FFK94] remains unchanged even if oneallows a polynomial number of gap values rather than one. On the other hand, weshow that it is impossible to improve this from polynomially many gap values toa superpolynomial number of gap values by relativizable proof techniques.  The first of these results implies that the Legitimate Deck Problem (from thestudy of graph reconstruction) is in LWPP (and thus low for PP, i.e., $\rmPP^{\mbox{Legitimate Deck}} = PP$) if the weakened version of theReconstruction Conjecture holds in which the number of nonisomorphic preimagesis assumed merely to be polynomially bounded. This strengthens the 1992 resultof K\"{o}bler, Sch\"{o}ning, and Tor\'{a}n [KST92] that the Legitimate DeckProblem is in LWPP if the Reconstruction Conjecture holds, and providesstrengthened evidence that the Legitimate Deck Problem is not NP-hard.  We additionally show on the one hand that our main LWPP robustness resultalso holds for WPP, and also holds even when one allows both the rejection- andacceptance- gap-value targets to simultaneously be polynomial-sized lists; yeton the other hand, we show that for the #P-based analog of LWPP the behaviormuch differs in that, in some relativized worlds, even two target valuesalready yield a richer class than one value does. Despite that nonrobustnessresult for a #P-based class, we show that the #P-based "exact counting" class$\rm C_{=}P$ remains unchanged even if one allows a polynomial number of targetvalues for the number of accepting paths of the machine.

Copeland Voting Fully Resists Constructive Control

  Control and bribery are settings in which an external agent seeks toinfluence the outcome of an election. Faliszewski et al. [FHHR07] proved thatLlull voting (which is here denoted by Copeland^1) and a variant (here denotedby Copeland^0) of Copeland voting are computationally resistant to many, yetnot all, types of constructive control and that they also provide broadresistance to bribery. We study a parameterized version of Copeland voting,denoted by Copeland^alpha where the parameter alpha is a rational numberbetween 0 and 1 that specifies how ties are valued in the pairwise comparisonsof candidates in Copeland elections. We establish resistance or vulnerabilityresults, in every previously studied control scenario, for Copeland^alpha, foreach rational alpha, 0 <alpha < 1. In particular, we prove that Copeland^0.5,the system commonly referred to as ``Copeland voting,'' provides fullresistance to constructive control. Among the systems with a polynomial-timewinner problem, this is the first natural election system proven to have fullresistance to constructive control. Results on bribery and fixed-parametertractability of bounded-case control proven for Copeland^0 and Copeland^1 in[FHHR07] are extended to Copeland^alpha for each rational alpha, 0 < alpha < 1;we also give results in more flexible models such as microbribery and extendedcontrol.

The Complexity of Online Voter Control in Sequential Elections

  Previous work on voter control, which refers to situations where a chairseeks to change the outcome of an election by deleting, adding, or partitioningvoters, takes for granted that the chair knows all the voters' preferences andthat all votes are cast simultaneously. However, elections are often heldsequentially and the chair thus knows only the previously cast votes and notthe future ones, yet needs to decide instantaneously which control action totake. We introduce a framework that models online voter control in sequentialelections. We show that the related problems can be much harder than in thestandard (non-online) case: For certain election systems, even with efficientwinner problems, online control by deleting, adding, or partitioning voters isPSPACE-complete, even if there are only two candidates. In addition, we obtain(by a new characterization of coNP in terms of weight-bounded alternatingTuring machines) completeness for coNP in the deleting/adding cases with abounded deletion/addition limit, and we obtain completeness for NP in thepartition cases with an additional restriction. We also show that forplurality, online control by deleting or adding voters is in P, and forpartitioning voters is coNP-hard.

The Complexity of Online Manipulation of Sequential Elections

  Most work on manipulation assumes that all preferences are known to themanipulators. However, in many settings elections are open and sequential, andmanipulators may know the already cast votes but may not know the future votes.We introduce a framework, in which manipulators can see the past votes but notthe future ones, to model online coalitional manipulation of sequentialelections, and we show that in this setting manipulation can be extremelycomplex even for election systems with simple winner problems. Yet we also showthat for some of the most important election systems such manipulation issimple in certain settings. This suggests that when using sequential voting,one should pay great attention to the details of the setting in choosing one'svoting rule.  Among the highlights of our classifications are: We show that, depending onthe size of the manipulative coalition, the online manipulation problem can becomplete for each level of the polynomial hierarchy or even for PSPACE. Weobtain the most dramatic contrast to date between the nonunique-winner andunique-winner models: Online weighted manipulation for plurality is in P in thenonunique-winner model, yet is coNP-hard (constructive case) and NP-hard(destructive case) in the unique-winner model. And we obtain what to the bestof our knowledge are the first PNP[1]-completeness and PNP-completeness resultsin the field of computational social choice, in particular proving suchcompleteness for, respectively, the complexity of 3-candidate and 4-candidate(and unlimited-candidate) online weighted coalition manipulation of vetoelections.

The Complexity of Boolean Constraint Isomorphism

  In 1978, Schaefer proved his famous dichotomy theorem for generalizedsatisfiability problems. He defined an infinite number of propositionalsatisfiability problems (nowadays usually called Boolean constraintsatisfaction problems) and showed that all these satisfiability problems areeither in P or NP-complete. In recent years, similar results have been obtainedfor quite a few other problems for Boolean constraints.Almost all of theseproblems are variations of the satisfiability problem.  In this paper, we address a problem that is not a variation ofsatisfiability, namely, the isomorphism problem for Boolean constraints.Previous work by B\"ohler et al. showed that the isomorphism problem is eithercoNP-hard or reducible to the graph isomorphism problem (a problem that is inNP, but not known to be NP-hard), thus distinguishing a hard case and an easiercase. However, they did not classify which cases are truly easy, i.e., in P.This paper accomplishes exactly that. It shows that Boolean constraintisomorphism is coNP-hard (and GI-hard), or equivalent to graph isomorphism, orin P, and it gives simple criteria to determine which case holds.

Generalized Modal Satisfiability

  It is well known that modal satisfiability is PSPACE-complete (Ladner 1977).However, the complexity may decrease if we restrict the set of propositionaloperators used. Note that there exist an infinite number of propositionaloperators, since a propositional operator is simply a Boolean function. Wecompletely classify the complexity of modal satisfiability for every finite setof propositional operators, i.e., in contrast to previous work, we classify aninfinite number of problems. We show that, depending on the set ofpropositional operators, modal satisfiability is PSPACE-complete,coNP-complete, or in P. We obtain this trichotomy not only for modal formulas,but also for their more succinct representation using modal circuits. Weconsider both the uni-modal and the multi-modal case, and study the dualproblem of validity as well.

Modeling Single-Peakedness for Votes with Ties

  Single-peakedness is one of the most important and well-known domainrestrictions on preferences. The computational study of single-peakedelectorates has largely been restricted to elections with tie-free votes, andrecent work that studies the computational complexity of manipulative attacksfor single-peaked elections for votes with ties has been restricted tononstandard models of single-peaked preferences for top orders. We study thecomputational complexity of manipulation for votes with ties for the standardmodel of single-peaked preferences and for single-plateaued preferences. Weshow that these models avoid the anomalous complexity behavior exhibited by theother models. We also state a surprising result on the relation between thesocietal axis and the complexity of manipulation for single-peaked preferences.

Election Score Can Be Harder Than Winner

  Election systems based on scores generally determine the winner by computingthe score of each candidate and the winner is the candidate with the bestscore. It would be natural to expect that computing the winner of an electionis at least as hard as computing the score of a candidate. We show that this isnot always the case. In particular, we show that for Young elections fordichotomous preferences the winner problem is easy, while determining the scoreof a candidate is hard. This complexity behavior has not been seen before andis unusual. For example, a common slight variant of Young has a hard winnerproblem for dichotomous preferences, and natural versions of Dodgson and Kemenyfor dichotomous preferences have easy score and winner problems.

Very Hard Electoral Control Problems

  It is important to understand how the outcome of an election can be modifiedby an agent with control over the structure of the election. Electoral controlhas been studied for many election systems, but for all studied systems thewinner problem is in P, and so control is in NP. There are election systems,such as Kemeny, that have many desirable properties, but whose winner problemsare not in NP. Thus for such systems control is not in NP, and in fact we showthat it is typically complete for $\Sigma_2^p$ (i.e., ${\rm NP}^{\rm NP}$, thesecond level of the polynomial hierarchy). This is a very high level ofcomplexity. Approaches that perform quite well for solving NP problems do notnecessarily work for $\Sigma_2^p$-complete problems. However, answer setprogramming is suited to express problems in $\Sigma_2^p$, and we present anencoding for Kemeny control.

The Complexity of Online Manipulation of Sequential Elections

  Most work on manipulation assumes that all preferences are known to themanipulators. However, in many settings elections are open and sequential, andmanipulators may know the already cast votes but may not know the future votes.We introduce a framework, in which manipulators can see the past votes but notthe future ones, to model online coalitional manipulation of sequentialelections, and we show that in this setting manipulation can be extremelycomplex even for election systems with simple winner problems. Yet we also showthat for some of the most important election systems such manipulation issimple in certain settings. This suggests that when using sequential voting,one should pay great attention to the details of the setting in choosing one'svoting rule. Among the highlights of our classifications are: We show that,depending on the size of the manipulative coalition, the online manipulationproblem can be complete for each level of the polynomial hierarchy or even forPSPACE. We obtain the most dramatic contrast to date between thenonunique-winner and unique-winner models: Online weighted manipulation forplurality is in P in the nonunique-winner model, yet is coNP-hard (constructivecase) and NP-hard (destructive case) in the unique-winner model. And we obtainwhat to the best of our knowledge are the first P^NP[1]-completeness andP^NP-completeness results in the field of computational social choice, inparticular proving such completeness for, respectively, the complexity of3-candidate and 4-candidate (and unlimited-candidate) online weighted coalitionmanipulation of veto elections.

