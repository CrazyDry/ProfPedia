Collaboration Versus Cheating

  We outline how we detected programming plagiarism in an introductory onlinecourse for a master's of science in computer science program, how we achieved astatistically significant reduction in programming plagiarism by combining aclear explanation of university and class policy on academic honesty reinforcedwith a short but formal assessment, and how we evaluated plagiarism ratesbefore SIGand after implementing our policy and assessment.

DRIVESHAFT: Improving Perceived Mobile Web Performance

  With mobiles overtaking desktops as the primary vehicle of Internetconsumption, mobile web performance has become a crucial factor for websites asit directly impacts their revenue. In principle, improving web performanceentails squeezing out every millisecond of the webpage delivery, loading, andrendering. However, on a practical note, an illusion of faster websitessuffices. This paper presents DriveShaft, a system envisioned to be deployed inContent Delivery Networks, which improves the perceived web performance onmobile devices by reducing the time taken to show visually complete web pages,without requiring any changes in websites, browsers, or any actions fromend-user. DriveShaft employs (i) crowdsourcing, (ii) on-the-fly JavaScriptinjection, (iii) privacy preserving desensitization, and (iv) automatic HTMLgeneration to achieve its goals. Experimental evaluations using 200representative websites on different networks (Wi-Fi and 4G), different devices(high-end and low-end phones) and different browsers, show a reduction of 5x inthe time required to see a visually complete website while giving a perceptionof 5x-6x faster page loading.

SPX: Preserving End-to-End Security for Edge Computing

  Beyond point solutions, the vision of edge computing is to enable webservices to deploy their edge functions in a multi-tenant infrastructurepresent at the edge of mobile networks. However, edge functions can be rendereduseless because of one critical issue: Web services are delivered overend-to-end encrypted connections, so edge functions cannot operate on encryptedtraffic without compromising security or degrading performance. Any solution tothis problem must interoperate with existing protocols like TLS, as well aswith new emerging security protocols for client and IoT devices. The edgefunctions must remain invisible to client-side endpoints but may requireexplicit control from their service-side web services. Finally, a solution mustoperate within overhead margins which do not obviate the benefits of the edge.  To address this problem, this paper presents SPX - a solution for edge-readyand end-to-end secure protocol extensions, which can efficiently maintainend-to-edge-to-end ($E^3$) security semantics. Using our SPX prototype, weallow edge functions to operate on encrypted traffic, while ensuring thatsecurity semantics of secure protocols still hold. SPX uses Intel SGX to bindthe communication channel with remote attestation and to provide a solutionthat not only defends against potential attacks but also results in lowperformance overheads, and neither mandates any changes on the end-user sidenor breaks interoperability with existing protocols.

