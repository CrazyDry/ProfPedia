The Lovelace 2.0 Test of Artificial Creativity and Intelligence

  Observing that the creation of certain types of artistic artifactsnecessitate intelligence, we present the Lovelace 2.0 Test of creativity as analternative to the Turing Test as a means of determining whether an agent isintelligent. The Lovelace 2.0 Test builds off prior tests of creativity andadditionally provides a means of directly comparing the relative intelligenceof different agents.

A Python Engine for Teaching Artificial Intelligence in Games

  Computer games play an important role in our society and motivate people tolearn computer science. Since artificial intelligence is integral to mostgames, they can also be used to teach artificial intelligence. We introduce theGame AI Game Engine (GAIGE), a Python game engine specifically designed toteach about how AI is used in computer games. A progression of sevenassignments builds toward a complete, working Multi-User Battle Arena (MOBA)game. We describe the engine, the assignments, and our experiences using it ina class on Game Artificial Intelligence.

Computational Narrative Intelligence: A Human-Centered Goal for  Artificial Intelligence

  Narrative intelligence is the ability to craft, tell, understand, and respondaffectively to stories. We argue that instilling artificial intelligences withcomputational narrative intelligence affords a number of applicationsbeneficial to humans. We lay out some of the machine learning challengesnecessary to solve to achieve computational narrative intelligence. Finally, weargue that computational narrative is a practical step towards machineenculturation, the teaching of sociocultural values to machines.

Human-Centered Artificial Intelligence and Machine Learning

  Humans are increasingly coming into contact with artificial intelligence andmachine learning systems. Human-centered artificial intelligence is aperspective on AI and ML that algorithms must be designed with awareness thatthey are part of a larger system consisting of humans. We lay forth an argumentthat human-centered artificial intelligence can be broken down into twoaspects: (1) AI systems that understand humans from a socioculturalperspective, and (2) AI systems that help humans understand them. We furtherargue that issues of social responsibility such as fairness, accountability,interpretability, and transparency.

Creative Invention Benchmark

  In this paper we present the Creative Invention Benchmark (CrIB), a2000-problem benchmark for evaluating a particular facet of computationalcreativity. Specifically, we address combinational p-creativity, the creativityat play when someone combines existing knowledge to achieve a solution novel tothat individual. We present generation strategies for the five problemcategories of the benchmark and a set of initial baselines.

Enter the Matrix: Safely Interruptible Autonomous Systems via  Virtualization

  Autonomous systems that operate around humans will likely always rely on killswitches that stop their execution and allow them to be remote-controlled forthe safety of humans or to prevent damage to the system. It is theoreticallypossible for an autonomous system with sufficient sensor and effectorcapability that learn online using reinforcement learning to discover that thekill switch deprives it of long-term reward and thus learn to disable theswitch or otherwise prevent a human operator from using the switch. This isreferred to as the big red button problem. We present a technique that preventsa reinforcement learning agent from learning to disable the kill switch. Weintroduce an interruption process in which the agent's sensors and effectorsare redirected to a virtual simulation where it continues to believe it isreceiving reward. We illustrate our technique in a simple grid worldenvironment.

Guiding Reinforcement Learning Exploration Using Natural Language

  In this work we present a technique to use natural language to helpreinforcement learning generalize to unseen environments. This technique usesneural machine translation, specifically the use of encoder-decoder networks,to learn associations between natural language behavior descriptions andstate-action information. We then use this learned model to guide agentexploration using a modified version of policy shaping to make it moreeffective at learning in unseen environments. We evaluate this technique usingthe popular arcade game, Frogger, under ideal and non-ideal conditions. Thisevaluation shows that our modified policy shaping algorithm improves over aQ-learning agent as well as a baseline version of policy shaping.

Evaluating Singleplayer and Multiplayer in Human Computation Games

  Human computation games (HCGs) can provide novel solutions to intractablecomputational problems, help enable scientific breakthroughs, and providedatasets for artificial intelligence. However, our knowledge about how todesign and deploy HCGs that appeal to players and solve problems effectively isincomplete. We present an investigatory HCG based on Super Mario Bros. We usedthis game in a human subjects study to investigate how different socialconditions---singleplayer and multiplayer---and scoringmechanics---collaborative and competitive---affect players' subjectiveexperiences, accuracy at the task, and the completion rate. In doing so, wedemonstrate a novel design approach for HCGs, and discuss the benefits andtradeoffs of these mechanics in HCG design.

Event Representations for Automated Story Generation with Deep Neural  Nets

  Automated story generation is the problem of automatically selecting asequence of events, actions, or words that can be told as a story. We seek todevelop a system that can generate stories by learning everything it needs toknow from textual story corpora. To date, recurrent neural networks that learnlanguage models at character, word, or sentence levels have had little successgenerating coherent stories. We explore the question of event representationsthat provide a mid-level of abstraction between words and sentences in order toretain the semantic information of the original data while minimizing eventsparsity. We present a technique for preprocessing textual story data intoevent sequences. We then present a technique for automated story generationwhereby we decompose the problem into the generation of successive events(event2event) and the generation of natural language sentences from events(event2sentence). We give empirical results comparing different eventrepresentations and their effects on event successor generation and thetranslation of events to natural language.

Rationalization: A Neural Machine Translation Approach to Generating  Natural Language Explanations

  We introduce AI rationalization, an approach for generating explanations ofautonomous system behavior as if a human had performed the behavior. Wedescribe a rationalization technique that uses neural machine translation totranslate internal state-action representations of an autonomous agent intonatural language. We evaluate our technique in the Frogger game environment,training an autonomous game playing agent to rationalize its action choicesusing natural language. A natural language training corpus is collected fromhuman players thinking out loud as they play the game. We motivate the use ofrationalization as an approach to explanation generation and show the resultsof two experiments evaluating the effectiveness of rationalization. Results ofthese evaluations show that neural machine translation is able to accuratelygenerate rationalizations that describe agent behavior, and thatrationalizations are more satisfying to humans than other alternative methodsof explanation.

A Framework for Exploring and Evaluating Mechanics in Human Computation  Games

  Human computation games (HCGs) are a crowdsourcing approach to solvingcomputationally-intractable tasks using games. In this paper, we describe theneed for generalizable HCG design knowledge that accommodates the needs of bothplayers and tasks. We propose a formal representation of the mechanics in HCGs,providing a structural breakdown to visualize, compare, and explore the spaceof HCG mechanics. We present a methodology based on small-scale designexperiments using fixed tasks while varying game elements to observe effects onboth the player experience and the human computation task completion. Finallywe discuss applications of our framework using comparisons of prior HCGs andrecent design experiments. Ultimately, we wish to enable easier exploration anddevelopment of HCGs, helping these games provide meaningful player experienceswhile solving difficult problems.

Explore, Exploit or Listen: Combining Human Feedback and Policy Model to  Speed up Deep Reinforcement Learning in 3D Worlds

  We describe a method to use discrete human feedback to enhance theperformance of deep learning agents in virtual three-dimensional environmentsby extending deep-reinforcement learning to model the confidence andconsistency of human feedback. This enables deep reinforcement learningalgorithms to determine the most appropriate time to listen to the humanfeedback, exploit the current policy model, or explore the agent's environment.Managing the trade-off between these three strategies allows DRL agents to berobust to inconsistent or intermittent human feedback. Through experimentationusing a synthetic oracle, we show that our technique improves the trainingspeed and overall performance of deep reinforcement learning in navigatingthree-dimensional environments using Minecraft. We further show that ourtechnique is robust to highly innacurate human feedback and can also operatewhen no human feedback is given.

Combinets: Creativity via Recombination of Neural Networks

  One of the defining characteristics of human creativity is the ability tomake conceptual leaps, creating something surprising from typical knowledge. Incomparison, deep neural networks often struggle to handle cases outside oftheir training data, which is especially problematic for problems with limitedtraining data. Approaches exist to transfer knowledge from problems withsufficient data to those with insufficient data, but they tend to requireadditional training or a domain-specific method of transfer. We present a newapproach, conceptual expansion, that serves as a general representation forreusing existing trained models to derive new models without backpropagation.We evaluate our approach on few-shot variations of two tasks: imageclassification and image generation, and outperform standard transfer learningapproaches.

Controllable Neural Story Plot Generation via Reinforcement Learning

  Language-modeling--based approaches to story plot generation attempt toconstruct a plot by sampling from a language model (LM) to predict the nextcharacter, word, or sentence to add to the story. LM techniques lack theability to receive guidance from the user to achieve a specific goal, resultingin stories that don't have a clear sense of progression and lack coherence. Wepresent a reward-shaping technique that analyzes a story corpus and producesintermediate rewards that are backpropagated into a pre-trained LM in order toguide the model towards a given goal. Automated evaluations show our techniquecan create a model that generates story plots which consistently achieve aspecified goal. Human-subject studies show that the generated stories have moreplausible event ordering than baseline plot generation techniques.

Playing Text-Adventure Games with Graph-Based Deep Reinforcement  Learning

  Text-based adventure games provide a platform on which to explorereinforcement learning in the context of a combinatorial action space, such asnatural language. We present a deep reinforcement learning architecture thatrepresents the game state as a knowledge graph which is learned duringexploration. This graph is used to prune the action space, enabling moreefficient exploration. The question of which action to take can be reduced to aquestion-answering task, a form of transfer learning that pre-trains certainparts of our architecture. In experiments using the TextWorld framework, weshow that our proposed technique can learn a control policy faster thanbaseline alternatives. We have also open-sourced our code athttps://github.com/rajammanabrolu/KG-DQN.

