A low-latency control plane for dense cellular networks

  In order to keep up with the increasing demands for capacity, cellularnetworks are becoming increasingly dense and heterogeneous. Dense deploymentsare expected to provide a linear capacity scaling with the number of smallcells deployed due to spatial reuse gains. However in practice network capacityis severely limited in dense networks due to interference. The primary reasonis that the current LTE control plane deployment model has very high latencyand is unable to cope with the demand of implementing interference managementtechniques that require coordination on a millisecond timeframe.  This paper presents SwiftC, a novel low-latency control plane design for LTEnetworks. SwiftC's novel contribution is a design for efficiently sending andreceiving control plane messages over the LTE spectrum itself, thus creating adirect and low-latency coordination signaling link between small cells and themacrocell. SwiftC builds on recent work in full duplex radios and shows viaprototype implementations that a low latency control plane can be built overthe existing LTE network without wasting licensed spectrum. We also show thebenefits of SwiftC in implementing complex interference management techniques,and show that with SwiftC small cell deployments can achieve almost a linearcapacity scaling with every small cell deployed.

Position Tracking for Virtual Reality Using Commodity WiFi

  Today, experiencing virtual reality (VR) is a cumbersome experience whicheither requires dedicated infrastructure like infrared cameras to track theheadset and hand-motion controllers (e.g., Oculus Rift, HTC Vive), or providesonly 3-DoF (Degrees of Freedom) tracking which severely limits the userexperience (e.g., Samsung Gear). To truly enable VR everywhere, we needposition tracking to be available as a ubiquitous service. This paper presentsWiCapture, a novel approach which leverages commodity WiFi infrastructure,which is ubiquitous today, for tracking purposes. We prototype WiCapture usingoff-the-shelf WiFi radios and show that it achieves an accuracy of 0.88 cmcompared to sophisticated infrared based tracking systems like the Oculus,while providing much higher range, resistance to occlusion, ubiquity and easeof deployment.

Bandana: Using Non-volatile Memory for Storing Deep Learning Models

  Typical large-scale recommender systems use deep learning models that arestored on a large amount of DRAM. These models often rely on embeddings, whichconsume most of the required memory. We present Bandana, a storage system thatreduces the DRAM footprint of embeddings, by using Non-volatile Memory (NVM) asthe primary storage medium, with a small amount of DRAM as cache. The mainchallenge in storing embeddings on NVM is its limited read bandwidth comparedto DRAM. Bandana uses two primary techniques to address this limitation: first,it stores embedding vectors that are likely to be read together in the samephysical location, using hypergraph partitioning, and second, it decides thenumber of embedding vectors to cache in DRAM by simulating dozens of smallcaches. These techniques allow Bandana to increase the effective read bandwidthof NVM by 2-3x and thereby significantly reduce the total cost of ownership.

Trevor: Automatic configuration and scaling of stream processing  pipelines

  Operating a distributed data stream processing workload efficiently at scaleis hard. The operator of the workload must parallelize and lay out tasks of theworkload with resources that match the requirement of target data rate. Thechallenge is that neither the operator nor the programmer is typically aware ofthe scaling behavior of the workload as a function of resources. An operatormanually searches for a safe operating point that can handle predicted peakload and deploys with ample headroom for absorbing unpredictable spikes. Suchempirical, static over-provisioning is wasteful of both compute and humanresources. We show that precise performance models can be automatically learnedfor distributed stream processing systems that can predict the executionperformance of a job even before deployment. Further, those models can be usedto optimally schedule logically specified jobs onto available physicalhardware. Finally, those models and the derived execution schedules can berefined online to dynamically adapt to unpredictable changes in the runtimeenvironment or auto-scale with variations in job load.

Programmable Packet Scheduling

  Switches today provide a small set of scheduling algorithms. While we cantweak scheduling parameters, we cannot modify algorithmic logic, or add acompletely new algorithm, after the switch has been designed. This paperpresents a design for a programmable packet scheduler, which allows schedulingalgorithms---potentially algorithms that are unknown today---to be programmedinto a switch without requiring hardware redesign.  Our design builds on the observation that scheduling algorithms make twodecisions: in what order to schedule packets and when to schedule them.Further, in many scheduling algorithms these decisions can be made when packetsare enqueued. We leverage this observation to build a programmable schedulerusing a single abstraction: the push-in first-out queue (PIFO), a priorityqueue that maintains the scheduling order and time for such algorithms.  We show that a programmable scheduler using PIFOs lets us program a widevariety of scheduling algorithms. We present a detailed hardware design forthis scheduler for a 64-port 10 Gbit/s shared-memory switch with <4% chip areaoverhead on a 16-nm standard-cell library. Our design lets us program manysophisticated algorithms, such as a 5-level hierarchical scheduler withprogrammable scheduling algorithms at each level.

Flashield: a Key-value Cache that Minimizes Writes to Flash

  As its price per bit drops, SSD is increasingly becoming the default storagemedium for cloud application databases. However, it has not become thepreferred storage medium for key-value caches, even though SSD offers more than10x lower price per bit and sufficient performance compared to DRAM. This isbecause key-value caches need to frequently insert, update and evict smallobjects. This causes excessive writes and erasures on flash storage, sinceflash only supports writes and erasures of large chunks of data. Theseexcessive writes and erasures significantly shorten the lifetime of flash,rendering it impractical to use for key-value caches. We present Flashield, ahybrid key-value cache that uses DRAM as a "filter" to minimize writes to SSD.Flashield performs light-weight machine learning profiling to predict whichobjects are likely to be read frequently before getting updated; these objects,which are prime candidates to be stored on SSD, are written to SSD in largechunks sequentially. In order to efficiently utilize the cache's availablememory, we design a novel in-memory index for the variable-sized objects storedon flash that requires only 4 bytes per object in DRAM. We describe Flashield'sdesign and implementation and, we evaluate it on a real-world cache trace.Compared to state-of-the-art systems that suffer a write amplification of 2.5xor more, Flashield maintains a median write amplification of 0.5x without anyloss of hit rate or throughput.

Light-Field for RF

  Most computer vision systems and computational photography systems arevisible light based which is a small fraction of the electromagnetic (EM)spectrum. In recent years radio frequency (RF) hardware has become more widelyavailable, for example, many cars are equipped with a RADAR, and almost everyhome has a WiFi device. In the context of imaging, RF spectrum holds manyadvantages compared to visible light systems. In particular, in this regime, EMenergy effectively interacts in different ways with matter. This propertyallows for many novel applications such as privacy preserving computer visionand imaging through absorbing and scattering materials in visible light such aswalls. Here, we expand many of the concepts in computational photography invisible light to RF cameras. The main limitation of imaging with RF is thelarge wavelength that limits the imaging resolution when compared to visiblelight. However, the output of RF cameras is usually processed by computervision and perception algorithms which would benefit from multi-modal sensingof the environment, and from sensing in situations in which visible lightsystems fail. To bridge the gap between computational photography and RFimaging, we expand the concept of light-field to RF. This work paves the way tonovel computational sensing systems with RF.

Network Offloading Policies for Cloud Robotics: a Learning-based  Approach

  Today's robotic systems are increasingly turning to computationally expensivemodels such as deep neural networks (DNNs) for tasks like localization,perception, planning, and object detection. However, resource-constrainedrobots, like low-power drones, often have insufficient on-board computeresources or power reserves to scalably run the most accurate, state-of-the artneural network compute models. Cloud robotics allows mobile robots the benefitof offloading compute to centralized servers if they are uncertain locally orwant to run more accurate, compute-intensive models. However, cloud roboticscomes with a key, often understated cost: communicating with the cloud overcongested wireless networks may result in latency or loss of data. In fact,sending high data-rate video or LIDAR from multiple robots over congestednetworks can lead to prohibitive delay for real-time applications, which wemeasure experimentally. In this paper, we formulate a novel Robot OffloadingProblem --- how and when should robots offload sensing tasks, especially ifthey are uncertain, to improve accuracy while minimizing the cost of cloudcommunication? We formulate offloading as a sequential decision making problemfor robots, and propose a solution using deep reinforcement learning. In bothsimulations and hardware experiments using state-of-the art vision DNNs, ouroffloading strategy improves vision task performance by between 1.3-2.6x ofbenchmark offloading strategies, allowing robots the potential to significantlytranscend their on-board sensing accuracy but with limited cost of cloudcommunication.

