Towards an ASP-Based Architecture for Autonomous UAVs in Dynamic  Environments (Extended Abstract)

  Traditional AI reasoning techniques have been used successfully in manydomains, including logistics, scheduling and game playing. This paper is partof a project aimed at investigating how such techniques can be extended tocoordinate teams of unmanned aerial vehicles (UAVs) in dynamic environments.Specifically challenging are real-world environments where UAVs and othernetwork-enabled devices must communicate to coordinate -- and communicationactions are neither reliable nor free. Such network-centric environments arecommon in military, public safety and commercial applications, yet mostresearch (even multi-agent planning) usually takes communications amongdistributed agents as a given. We address this challenge by developing an agentarchitecture and reasoning algorithms based on Answer Set Programming (ASP).Although ASP has been used successfully in a number of applications, to thebest of our knowledge this is the first practical application of a completeASP-based agent architecture. It is also the first practical application of ASPinvolving a combination of centralized reasoning, decentralized reasoning,execution monitoring, and reasoning about network communications.

An ASP-Based Architecture for Autonomous UAVs in Dynamic Environments:  Progress Report

  Traditional AI reasoning techniques have been used successfully in manydomains, including logistics, scheduling and game playing. This paper is partof a project aimed at investigating how such techniques can be extended tocoordinate teams of unmanned aerial vehicles (UAVs) in dynamic environments.Specifically challenging are real-world environments where UAVs and othernetwork-enabled devices must communicate to coordinate---and communicationactions are neither reliable nor free. Such network-centric environments arecommon in military, public safety and commercial applications, yet mostresearch (even multi-agent planning) usually takes communications amongdistributed agents as a given. We address this challenge by developing an agentarchitecture and reasoning algorithms based on Answer Set Programming (ASP).ASP has been chosen for this task because it enables high flexibility ofrepresentation, both of knowledge and of reasoning tasks. Although ASP has beenused successfully in a number of applications, and ASP-based architectures havebeen studied for about a decade, to the best of our knowledge this is the firstpractical application of a complete ASP-based agent architecture. It is alsothe first practical application of ASP involving a combination of centralizedreasoning, decentralized reasoning, execution monitoring, and reasoning aboutnetwork communications. This work has been empirically validated using adistributed network-centric software evaluation testbed and the results provideguidance to designers in how to understand and control intelligent systems thatoperate in these environments.

