A Piggybacking Design Framework for Read-and Download-efficient  Distributed Storage Codes

  We present a new 'piggybacking' framework for designing distributed storagecodes that are efficient in data-read and download required during node-repair.We illustrate the power of this framework by constructing classes of explicitcodes that entail the smallest data-read and download for repair among allexisting solutions for three important settings: (a) codes meeting theconstraints of being Maximum-Distance-Separable (MDS), high-rate and having asmall number of substripes, arising out of practical considerations forimplementation in data centers, (b) binary MDS codes for all parameters wherebinary MDS codes exist, (c) MDS codes with the smallest repair-locality. Inaddition, we employ this framework to enable efficient repair of parity nodesin existing codes that were originally constructed to address the repair ofonly the systematic nodes. The basic idea behind our framework is to takemultiple instances of existing codes and add carefully designed functions ofthe data of one instance to the other. Typical savings in data-read duringrepair is 25% to 50% depending on the choice of the code parameters.

DART: Dropouts meet Multiple Additive Regression Trees

  Multiple Additive Regression Trees (MART), an ensemble model of boostedregression trees, is known to deliver high prediction accuracy for diversetasks, and it is widely used in practice. However, it suffers an issue which wecall over-specialization, wherein trees added at later iterations tend toimpact the prediction of only a few instances, and make negligible contributiontowards the remaining instances. This negatively affects the performance of themodel on unseen data, and also makes the model over-sensitive to thecontributions of the few, initially added tress. We show that the commonly usedtool to address this issue, that of shrinkage, alleviates the problem only to acertain extent and the fundamental issue of over-specialization still remains.In this work, we explore a different approach to address the problem that ofemploying dropouts, a tool that has been recently proposed in the context oflearning deep neural networks. We propose a novel way of employing dropouts inMART, resulting in the DART algorithm. We evaluate DART on ranking, regressionand classification tasks, using large scale, publicly available datasets, andshow that DART outperforms MART in each of the tasks, with a significantmargin. We also show that DART overcomes the issue of over-specialization to aconsiderable extent.

Information-theoretically Secure Erasure Codes for Distributed Storage

  Repair operations in distributed storage systems potentially expose the datato malicious acts of passive eavesdroppers or active adversaries, which can bedetrimental to the security of the system. This paper presents erasure codesand repair algorithms that ensure security of the data in the presence ofpassive eavesdroppers and active adversaries, while maintaining highavailability, reliability and efficiency in the system. Our codes are optimalin that they meet previously proposed lower bounds on the storage,network-bandwidth, and reliability requirements for a wide range of systemparameters. Our results thus establish the capacity of such systems. Our codesfor security from active adversaries provide an additional appealing feature of`on-demand security' where the desired level of security can be chosenseparately for each instance of repair, and our algorithms remain optimalsimultaneously for all possible levels. The paper also provides necessary andsufficient conditions governing the transformation of any (non-secure) codeinto one providing on-demand security.

Information-theoretically Secure Regenerating Codes for Distributed  Storage

  Regenerating codes are a class of codes for distributed storage networks thatprovide reliability and availability of data, and also perform efficient noderepair. Another important aspect of a distributed storage network is itssecurity. In this paper, we consider a threat model where an eavesdropper maygain access to the data stored in a subset of the storage nodes, and possiblyalso, to the data downloaded during repair of some nodes. We provide explicitconstructions of regenerating codes that achieve information-theoretic secrecycapacity in this setting.

A Solution to the Network Challenges of Data Recovery in Erasure-coded  Distributed Storage Systems: A Study on the Facebook Warehouse Cluster

  Erasure codes, such as Reed-Solomon (RS) codes, are being increasinglyemployed in data centers to combat the cost of reliably storing large amountsof data. Although these codes provide optimal storage efficiency, they requiresignificantly high network and disk usage during recovery of missing data. Inthis paper, we first present a study on the impact of recovery operations oferasure-coded data on the data-center network, based on measurements fromFacebook's warehouse cluster in production. To the best of our knowledge, thisis the first study of its kind available in the literature. Our study revealsthat recovery of RS-coded data results in a significant increase in networktraffic, more than a hundred terabytes per day, in a cluster storing multiplepetabytes of RS-coded data.  To address this issue, we present a new storage code using our recentlyproposed "Piggybacking" framework, that reduces the network and disk usageduring recovery by 30% in theory, while also being storage optimal andsupporting arbitrary design parameters. The implementation of the proposed codein the Hadoop Distributed File System (HDFS) is underway. We use themeasurements from the warehouse cluster to show that the proposed code wouldlead to a reduction of close to fifty terabytes of cross-rack traffic per day.

Interference Alignment in Regenerating Codes for Distributed Storage:  Necessity and Code Constructions

  Regenerating codes are a class of recently developed codes for distributedstorage that, like Reed-Solomon codes, permit data recovery from any arbitraryk of n nodes. However regenerating codes possess in addition, the ability torepair a failed node by connecting to any arbitrary d nodes and downloading anamount of data that is typically far less than the size of the data file. Thisamount of download is termed the repair bandwidth. Minimum storage regenerating(MSR) codes are a subclass of regenerating codes that require the least amountof network storage; every such code is a maximum distance separable (MDS) code.Further, when a replacement node stores data identical to that in the failednode, the repair is termed as exact.  The four principal results of the paper are (a) the explicit construction ofa class of MDS codes for d = n-1 >= 2k-1 termed the MISER code, that achievesthe cut-set bound on the repair bandwidth for the exact-repair of systematicnodes, (b) proof of the necessity of interference alignment in exact-repair MSRcodes, (c) a proof showing the impossibility of constructing linear,exact-repair MSR codes for d < 2k-3 in the absence of symbol extension, and (d)the construction, also explicit, of MSR codes for d = k+1. Interferencealignment (IA) is a theme that runs throughout the paper: the MISER code isbuilt on the principles of IA and IA is also a crucial component to thenon-existence proof for d < 2k-3. To the best of our knowledge, theconstructions presented in this paper are the first, explicit constructions ofregenerating codes that achieve the cut-set bound.

Comparison of the superconducting critical transition temperature of  LaBaCaCu3O7-d and NdBaCaCu3O7-d

  LaBaCaCu3O7 (La:1113) and NdBaCaCu3O7 (Nd:1113) compounds are synthesized bysolid state reaction route. Both compounds crystallize in tetragonal structure.  Four probe resistivity measurements showed that superconducting transitiontemperature (Tc) is 73 K and 41 K respectively for La:1113 and Nd:1113compounds. Considering the fact that for RE:123 (REBa2Cu3O7) compounds the Tchardly depends upon the choice of RE (Rare earth, except Ce, Pr and Tb), thecurrent nearly two fold increase in Tc of La:1113 when compared to Nd:1113,warrants serious discussion.

Enhanced Load Balancing Approach to Avoid Deadlocks in Cloud

  The state-of-art of the technology focuses on data processing to deal withmassive amount of data. Cloud computing is an emerging technology, whichenables one to accomplish the aforementioned objective, leading towardsimproved business performance. It comprises of users requesting for theservices of diverse applications from various distributed virtual servers. Thecloud should provide resources on demand to its clients with high availability,scalability and with reduced cost. Load balancing is one of the essentialfactors to enhance the working performance of the cloud service provider.Since, cloud has inherited characteristic of distributed computing andvirtualization there is a possibility of occurrence of deadlock. Hence, in thispaper, a load balancing algorithm has been proposed to avoid deadlocks amongthe Virtual Machines (VMs) while processing the requests received from theusers by VM migration. Further, this paper also provides the anticipatedresults with the implementation of the proposed algorithm. The deadlockavoidance enhances the number of jobs to be serviced by cloud service providerand thereby improving working performance and the business of the cloud serviceprovider.

Factors Influencing Job Rejections in Cloud Environment

  The IT organizations invests heavy capital by consuming large scaleinfrastructure and advanced operating platforms. The advances in technology hasresulted in emergence of cloud computing, which is promising technology toachieve the aforementioned objective. At the peak hours, the jobs arriving tothe cloud system are normally high demanding efficient execution and dispatch.An observation that has been carried out in this paper by capturing a jobarriving pattern from a monitoring system explains that most of the jobs getrejected because of lack of efficient technology. The job rejections can becontrolled by certain factors such as job scheduling and load balancing.Therefore, in this paper the efficiency of Round Robin (RR) scheduling strategyused for job scheduling and Shortest Job First Scheduling (SJFS) technique usedfor load balancing in reducing the job rejections are analyzed. Further, aproposal for an effective load balancing approach to avoid deadlocks has beendiscussed.

Regenerating Codes for Errors and Erasures in Distributed Storage

  Regenerating codes are a class of codes proposed for providing reliability ofdata and efficient repair of failed nodes in distributed storage systems. Inthis paper, we address the fundamental problem of handling errors and erasuresduring the data-reconstruction and node-repair operations. We provide explicitregenerating codes that are resilient to errors and erasures, and show thatthese codes are optimal with respect to storage and bandwidth requirements. Asa special case, we also establish the capacity of a class of distributedstorage systems in the presence of malicious adversaries. While our codeconstructions are based on previously constructed Product-Matrix codes, we alsoprovide necessary and sufficient conditions for introducing resilience in anyregenerating code.

Revival of Superconductivity by Y3+/Ca2+ substitution in  YBa2Cu2.7Co0.3O7 without reported phase transformation

  Results of phase formation, resistivity (r), and thermo-electric power (S),are reported on Y1-xCaxBa2Cu2.7Co0.3O7 compounds with x = 0.1 and 0.2. Pristinecompound i.e. without Co or Ca substitution crystallizes in orthorhombicstructure with space group P/mmm. Cu-site Co substituted compound i.e.YBa2Cu2.7Co0.3O7 is tetragonal. With simultaneous doping of Ca at Y site in Cosubstituted compound i.e. Y1-xCaxBa2Cu2.7Co0.3O7 the tetragonal nature stillremains. r(T) measurements showed superconducting transition temperature (Tc)to decrease from 90K (YBa2Cu3O7) to 33 K for YBa2Cu2.7Co0.3O7 which withfurther Ca substitution increases from 33K to 53K (Y0.9 Ca0.1Ba2Cu2.7Co0.3O7)and 67 K for Y0.8 Ca0.2Ba2Cu2.7Co0.3O7. Tc decreases first with Cu-site Cosubstitution by hole-filling and later recovers by simultaneous hole creationby Y site Ca substitution. Room temperature thermoelectric power S(300 K),which is an indirect measure of mobile carriers shows the decrease of carrierswith Co doping and creation by Ca substitution. Our results demonstrate thehole filling by Co substitution is compensated by simultaneous Ca substitution.

Impact of Zn substitution on phase formation and superconductivity of  Bi1.6Pb0.4 Sr2Ca2Cu3-xZnxO10 with x = 0.0, 0.015, 0.03, 0.06, 0.09 and 0.12

  Samples of series Bi1.6Pb0.4Sr2Ca2Cu3-xZnxO10 with x = 0.0, 0.015, 0.03,0.06, 0.09 and 0.12 are synthesized by solid-state reaction route. All thesamples crystallize in tetragonal structure with majority (> 90%) of Bi-2223(Bi2Sr2Ca2Cu3O10) phase (c-lattice parameter ~ 36 A0). The proportion ofBi-2223 phase decreases slightly with an increase in x. The lattice parametersa and c of main phase (Bi-2223) do not change significantly with increasing x.Superconducting critical transition temperature (Tc) decreases with x asevidenced by both resistivity [(T)] and AC magnetic susceptibility [(T)]measurements. Interestingly the decrement of Tc is not monotonic and the samesaturates at around 96 K for x > 0.06. In fact Tc decreases fast (~10K/at%) forx = 0.015 and 0.03 samples and later nearly saturates for higher x values.Present results of Zn doping in Bi-2223 system are compared with Zn doped otherHTSC (High temperature superconducting) systems, namely the RE-123 (REBa2Cu3O7)and La-214 ((La,Sr)2CuO4).

Phase formation and superconductivity of Fe-tube encapsulated and vacuum  annealed MgB2

  We report optimization of the synthesis parameters viz. heating temperature(TH), and hold time (thold) for vacuum (10-5 torr) annealed and LN2 (liquidnitrogen) quenched MgB2 compound. These are single-phase compoundscrystallizing in the hexagonal structure (space group P6/mmm) at roomtemperature. Our XRD results indicated that for phase-pure MgB2, the TH for10-5 torr annealed and LN2 quenched samples is 750 0C. The right stoichiometryi.e., MgB2 of the compound corresponding to 10-5 Torr and TH of 750 0C is foundfor the hold time (thold) of 2.30 hours. With varying thold from 1- 4 hours atfixed TH (750 0C) and vacuum (10-5 torr), the c-lattice parameter decreasesfirst and later increases with thold (hours) before a near saturation, whilethe a-lattice parameter first increase and later decreases beyond thold of 2.30hours. c/a ratio versus thold plot showed an inverted bell shape curve,touching the lowest value of 1.141 which is reported value for perfectstoichiometry of MgB2. The optimized stoichimetric MgB2 compound exhibitedsuperconductivity at 39.2 K with transition width of 0.6 K. In conclusion, thesynthesis parameters for phase pure stoichimetric vacuum annealed MgB2 compoundare optimized and are compared with widely reported Ta tube encapsulatedsamples.

Distributed Secret Dissemination Across a Network

  Shamir's (n, k) threshold secret sharing is an important component of severalcryptographic protocols, such as those for secure multiparty-computation andkey management. These protocols typically assume the presence of directcommunication links from the dealer to all participants, in which case thedealer can directly pass the shares of the secret to each participant. In thispaper, we consider the problem of secret sharing when the dealer does not havedirect communication links to all the participants, and instead, the dealer andthe participants form a general network. Existing methods are based on securemessage transmissions from the dealer to each participant requiringconsiderable coordination in the network. In this paper, we present adistributed algorithm for disseminating shares over a network, which we callthe SNEAK algorithm, requiring each node to know only the identities of itsone-hop neighbours. While SNEAK imposes a stronger condition on the network byrequiring the dealer to be what we call k-propagating rather than k-connectedas required by the existing solutions, we show that in addition to beingdistributed, SNEAK achieves significant reduction in the communication cost andthe amount of randomness required.

Explicit Construction of Optimal Exact Regenerating Codes for  Distributed Storage

  Erasure coding techniques are used to increase the reliability of distributedstorage systems while minimizing storage overhead. Also of interest isminimization of the bandwidth required to repair the system following a nodefailure. In a recent paper, Wu et al. characterize the tradeoff between therepair bandwidth and the amount of data stored per node. They also prove theexistence of regenerating codes that achieve this tradeoff.  In this paper, we introduce Exact Regenerating Codes, which are regeneratingcodes possessing the additional property of being able to duplicate the datastored at a failed node. Such codes require low processing and communicationoverheads, making the system practical and easy to maintain. Explicitconstruction of exact regenerating codes is provided for the minimum bandwidthpoint on the storage-repair bandwidth tradeoff, relevant todistributed-mail-server applications. A subspace based approach is provided andshown to yield necessary and sufficient conditions on a linear code to possessthe exact regeneration property as well as prove the uniqueness of ourconstruction.  Also included in the paper, is an explicit construction of regenerating codesfor the minimum storage point for parameters relevant to storage inpeer-to-peer systems. This construction supports a variable number of nodes andcan handle multiple, simultaneous node failures. All constructions given in thepaper are of low complexity, requiring low field size in particular.

Enabling Node Repair in Any Erasure Code for Distributed Storage

  Erasure codes are an efficient means of storing data across a network incomparison to data replication, as they tend to reduce the amount of datastored in the network and offer increased resilience in the presence of nodefailures. The codes perform poorly though, when repair of a failed node iscalled for, as they typically require the entire file to be downloaded torepair a failed node. A new class of erasure codes, termed as regeneratingcodes were recently introduced, that do much better in this respect. However,given the variety of efficient erasure codes available in the literature, thereis considerable interest in the construction of coding schemes that wouldenable traditional erasure codes to be used, while retaining the feature thatonly a fraction of the data need be downloaded for node repair. In this paper,we present a simple, yet powerful, framework that does precisely this. Underthis framework, the nodes are partitioned into two 'types' and encoded usingtwo codes in a manner that reduces the problem of node-repair to that oferasure-decoding of the constituent codes. Depending upon the choice of the twocodes, the framework can be used to avail one or more of the followingadvantages: simultaneous minimization of storage space and repair-bandwidth,low complexity of operation, fewer disk reads at helper nodes during repair,and error detection and correction.

Fundamental Limits on Communication for Oblivious Updates in Storage  Networks

  In distributed storage systems, storage nodes intermittently go offline fornumerous reasons. On coming back online, nodes need to update their contents toreflect any modifications to the data in the interim. In this paper, weconsider a setting where no information regarding modified data needs to belogged in the system. In such a setting, a 'stale' node needs to update itscontents by downloading data from already updated nodes, while neither thestale node nor the updated nodes have any knowledge as to which data symbolsare modified and what their value is. We investigate the fundamental limits onthe amount of communication necessary for such an "oblivious" update process.  We first present a generic lower bound on the amount of communication that isnecessary under any storage code with a linear encoding (while allowingnon-linear update protocols). This lower bound is derived under a set ofextremely weak conditions, giving all updated nodes access to the entiremodified data and the stale node access to the entire stale data as sideinformation. We then present codes and update algorithms that are optimal inthat they meet this lower bound. Next, we present a lower bound for animportant subclass of codes, that of linear Maximum-Distance-Separable (MDS)codes. We then present an MDS code construction and an associated updatealgorithm that meets this lower bound. These results thus establish thecapacity of oblivious updates in terms of the communication requirements underthese settings.

Learning a Code: Machine Learning for Approximate Non-Linear Coded  Computation

  Machine learning algorithms are typically run on large scale, distributedcompute infrastructure that routinely face a number of unavailabilities such asfailures and temporary slowdowns. Adding redundant computations usingcoding-theoretic tools called "codes" is an emerging technique to alleviate theadverse effects of such unavailabilities. A code consists of an encodingfunction that proactively introduces redundant computation and a decodingfunction that reconstructs unavailable outputs using the available ones. Pastwork focuses on using codes to provide resilience for linear computations andspecific iterative optimization algorithms. However, computations performed fora variety of applications including inference on state-of-the-art machinelearning algorithms, such as neural networks, typically fall outside thisrealm. In this paper, we propose taking a learning-based approach to designingcodes that can handle non-linear computations. We present carefully designedneural network architectures and a training methodology for learning encodingand decoding functions that produce approximate reconstructions of unavailablecomputation results. We present extensive experimental results demonstratingthe effectiveness of the proposed approach: we show that the our learned codescan accurately reconstruct $64 - 98\%$ of the unavailable predictions fromneural-network based image classifiers on the MNIST, Fashion-MNIST, andCIFAR-10 datasets. To the best of our knowledge, this work proposes the firstlearning-based approach for designing codes, and also presents the firstcoding-theoretic solution that can provide resilience for any non-linear(differentiable) computation. Our results show that learning can be aneffective technique for designing codes, and that learned codes are a highlypromising approach for bringing the benefits of coding to non-linearcomputations.

Optimal Exact-Regenerating Codes for Distributed Storage at the MSR and  MBR Points via a Product-Matrix Construction

  Regenerating codes are a class of distributed storage codes that optimallytrade the bandwidth needed for repair of a failed node with the amount of datastored per node of the network. Minimum Storage Regenerating (MSR) codesminimize first, the amount of data stored per node, and then the repairbandwidth, while Minimum Bandwidth Regenerating (MBR) codes carry out theminimization in the reverse order. An [n, k, d] regenerating code permits thedata to be recovered by connecting to any k of the n nodes in the network,while requiring that repair of a failed node be made possible by connecting(using links of lesser capacity) to any d nodes. Previous, explicit and generalconstructions of exact-regenerating codes have been confined to the case n=d+1.In this paper, we present optimal, explicit constructions of MBR codes for allfeasible values of [n, k, d] and MSR codes for all [n, k, d >= 2k-2], using aproduct-matrix framework. The particular product-matrix nature of theconstructions is shown to significantly simplify system operation. To the bestof our knowledge, these are the first constructions of exact-regenerating codesthat allow the number n of nodes in the distributed storage network, to bechosen independent of the other parameters. The paper also contains a simplerdescription, in the product-matrix framework, of a previously constructed MSRcode in which the parameter d satisfies [n=d+1, k, d >= 2k-1].

Explicit Codes Minimizing Repair Bandwidth for Distributed Storage

  We consider the setting of data storage across n nodes in a distributedmanner. A data collector (DC) should be able to reconstruct the entire data byconnecting to any k out of the n nodes and downloading all the data stored inthem. When a node fails, it has to be regenerated back using the existingnodes. In a recent paper, Wu et al. have obtained an information theoreticlower bound for the repair bandwidth. Also, there has been additional interestin storing data in systematic form as no post processing is required when DCconnects to k systematic nodes. Because of their preferred status there is aneed to regenerate back any systematic node quickly and exactly. Replacement ofa failed node by an exact replica is termed Exact Regeneration.In this paper,we consider the problem of minimizing the repair bandwidth for exactregeneration of the systematic nodes. The file to be stored is of size B andeach node can store alpha = B/k units of data. A failed systematic node isregenerated by downloading beta units of data each from d existing nodes. Wegive a lower bound for the repair bandwidth for exact regeneration of thesystematic nodes which matches with the bound given by Wu et al. For d >= 2k-1we give an explicit code construction which minimizes the repair bandwidth whenthe existing k-1 systematic nodes participate in the regeneration. We show theexistence and construction of codes that achieve the bound for d >= 2k-3. Herewe also establish the necessity of interference alignment. We prove that thebound is not achievable for d <= 2k-4 when beta=1. We also give a coding schemewhich can be used for any d and k, which is optimal for d >= 2k-1.

Optimal Systematic Distributed Storage Codes with Fast Encoding

  Erasure codes are being increasingly used in distributed-storage systems inplace of data-replication, since they provide the same level of reliabilitywith much lower storage overhead. We consider the problem of constructingexplicit erasure codes for distributed storage with the following desirableproperties motivated by practice: (i) Maximum-Distance-Separable (MDS): toprovide maximal reliability at minimum storage overhead, (ii) Optimalrepair-bandwidth: to minimize the amount of data needed to be transferred torepair a failed node from remaining ones, (iii) Flexibility in repair: to allowmaximal flexibility in selecting subset of nodes to use for repair, whichincludes not requiring that all surviving nodes be used for repair, (iv)Systematic Form: to ensure that the original data exists in uncoded form, and(v) Fast encoding: to minimize the cost of generating encoded data (enabled bya sparse generator matrix).  This paper presents the first explicit code construction which theoreticallyguarantees all the five desired properties simultaneously. Our constructionbuilds on a powerful class of codes called Product-Matrix (PM) codes. PM codessatisfy properties (i)-(iii), and either (iv) or (v), but not bothsimultaneously. Indeed, native PM codes have inherent structure that leads tosparsity, but this structure is destroyed when the codes are made systematic.We first present an analytical framework for understanding the interactionbetween the design of PM codes and the systematic property. Using thisframework, we provide an explicit code construction that simultaneouslyachieves all the above desired properties. We also present general ways oftransforming existing storage and repair optimal codes to enable fast encodingthrough sparsity. In practice, such sparse codes result in encoding speedup bya factor of about 4 for typical parameters.

Distributed Storage Codes with Repair-by-Transfer and Non-achievability  of Interior Points on the Storage-Bandwidth Tradeoff

  Regenerating codes are a class of recently developed codes for distributedstorage that, like Reed-Solomon codes, permit data recovery from any subset ofk nodes within the n-node network. However, regenerating codes possess inaddition, the ability to repair a failed node by connecting to an arbitrarysubset of d nodes. It has been shown that for the case of functional-repair,there is a tradeoff between the amount of data stored per node and thebandwidth required to repair a failed node. A special case of functional-repairis exact-repair where the replacement node is required to store data identicalto that in the failed node. Exact-repair is of interest as it greatlysimplifies system implementation. The first result of the paper is an explicit,exact-repair code for the point on the storage-bandwidth tradeoff correspondingto the minimum possible repair bandwidth, for the case when d=n-1. This codehas a particularly simple graphical description and most interestingly, has theability to carry out exact-repair through mere transfer of data and without anyneed to perform arithmetic operations. Hence the term `repair-by-transfer'. Thesecond result of this paper shows that the interior points on thestorage-bandwidth tradeoff cannot be achieved under exact-repair, thus pointingto the existence of a separate tradeoff under exact-repair. Specifically, weidentify a set of scenarios, termed `helper node pooling', and show that it isthe necessity to satisfy such scenarios that over-constrains the system.

