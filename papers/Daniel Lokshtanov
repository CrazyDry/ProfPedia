Parameterized Integer Quadratic Programming: Variables and Coefficients

  In the Integer Quadratic Programming problem input is an n*n integer matrix
Q, an m*n integer matrix A and an m-dimensional integer vector b. The task is
to find a vector x in Z^n, minimizing x^TQx, subject to Ax <= b. We give a
fixed parameter tractable algorithm for Integer Quadratic Programming
parameterized by n+a. Here a is the largest absolute value of an entry of Q and
A. As an application of our main result we show that Optimal Linear Arrangement
is fixed parameter tractable parameterized by the size of the smallest vertex
cover of the input graph. This resolves an open problem from the recent
monograph by Downey and Fellows.


Feedback Vertex Set in Mixed Graphs

  A mixed graph is a graph with both directed and undirected edges. We present
an algorithm for deciding whether a given mixed graph on $n$ vertices contains
a feedback vertex set (FVS) of size at most $k$, in time $2^{O(k)}k! O(n^4)$.
This is the first fixed parameter tractable algorithm for FVS that applies to
both directed and undirected graphs.


The Structure of $W_4$-Immersion-Free Graphs

  We study the structure of graphs that do not contain the wheel on 5 vertices
W4 as an immersion, and show that these graphs can be constructed via 1, 2, and
3-edge-sums from subcubic graphs and graphs of bounded treewidth.


The complexity of independent set reconfiguration on bipartite graphs

  We settle the complexity of the Independent Set Reconfiguration problem on
bipartite graphs under all three commonly studied reconfiguration models. We
show that under the token jumping or token addition/removal model the problem
is NP-complete. For the token sliding model, we show that the problem remains
PSPACE-complete.


Known Algorithms on Graphs of Bounded Treewidth are Probably Optimal

  We obtain a number of lower bounds on the running time of algorithms solving
problems on graphs of bounded treewidth. We prove the results under the Strong
Exponential Time Hypothesis of Impagliazzo and Paturi. In particular, assuming
that SAT cannot be solved in (2-\epsilon)^{n}m^{O(1)} time, we show that for
any e > 0; {\sc Independent Set} cannot be solved in (2-e)^{tw(G)}|V(G)|^{O(1)}
time, {\sc Dominating Set} cannot be solved in (3-e)^{tw(G)}|V(G)|^{O(1)} time,
{\sc Max Cut} cannot be solved in (2-e)^{tw(G)}|V(G)|^{O(1)} time, {\sc Odd
Cycle Transversal} cannot be solved in (3-e)^{tw(G)}|V(G)|^{O(1)} time, For any
$q \geq 3$, $q$-{\sc Coloring} cannot be solved in (q-e)^{tw(G)}|V(G)|^{O(1)}
time, {\sc Partition Into Triangles} cannot be solved in
(2-e)^{tw(G)}|V(G)|^{O(1)} time. Our lower bounds match the running times for
the best known algorithms for the problems, up to the e in the base.


An improved isomorphism test for bounded-tree-width graphs

  We give a new fpt algorithm testing isomorphism of $n$-vertex graphs of tree
width $k$ in time $2^{k\operatorname{polylog} (k)}\operatorname{poly} (n)$,
improving the fpt algorithm due to Lokshtanov, Pilipczuk, Pilipczuk, and
Saurabh (FOCS 2014), which runs in time $2^{\mathcal{O}(k^5\log
k)}\operatorname{poly} (n)$. Based on an improved version of the
isomorphism-invariant graph decomposition technique introduced by Lokshtanov et
al., we prove restrictions on the structure of the automorphism groups of
graphs of tree width $k$. Our algorithm then makes heavy use of the group
theoretic techniques introduced by Luks (JCSS 1982) in his isomorphism test for
bounded degree graphs and Babai (STOC 2016) in his quasipolynomial isomorphism
test. In fact, we even use Babai's algorithm as a black box in one place.
  We also give a second algorithm which, at the price of a slightly worse
running time $2^{\mathcal{O}(k^2 \log k)}\operatorname{poly} (n)$, avoids the
use of Babai's algorithm and, more importantly, has the additional benefit that
it can also used as a canonization algorithm.


A O(c^k n) 5-Approximation Algorithm for Treewidth

  We give an algorithm that for an input n-vertex graph G and integer k>0, in
time 2^[O(k)]n either outputs that the treewidth of G is larger than k, or
gives a tree decomposition of G of width at most 5k+4. This is the first
algorithm providing a constant factor approximation for treewidth which runs in
time single-exponential in k and linear in n. Treewidth based computations are
subroutines of numerous algorithms. Our algorithm can be used to speed up many
such algorithms to work in time which is single-exponential in the treewidth
and linear in the input size.


Efficient Computation of Representative Sets with Applications in
  Parameterized and Exact Algorithms

  We give two algorithms computing representative families of linear and
uniform matroids and demonstrate how to use representative families for
designing single-exponential parameterized and exact exponential time
algorithms. The applications of our approach include
  - LONGEST DIRECTED CYCLE
  - MINIMUM EQUIVALENT GRAPH (MEG)
  - Algorithms on graphs of bounded treewidth
  -k-PATH, k-TREE, and more generally, k-SUBGRAPH ISOMORPHISM, where the
k-vertex pattern graph is of constant treewidth.


A $2\ell k$ Kernel for $\ell$-Component Order Connectivity

  In the $\ell$-Component Order Connectivity problem ($\ell \in \mathbb{N}$),
we are given a graph $G$ on $n$ vertices, $m$ edges and a non-negative integer
$k$ and asks whether there exists a set of vertices $S\subseteq V(G)$ such that
$|S|\leq k$ and the size of the largest connected component in $G-S$ is at most
$\ell$. In this paper, we give a kernel for $\ell$-Component Order Connectivity
with at most $2\ell k$ vertices that takes $n^{\mathcal{O}(\ell)}$ time for
every constant $\ell$. On the way to obtaining our kernel, we prove a
generalization of the $q$-Expansion Lemma to weighted graphs. This
generalization may be of independent interest.


Planar F-Deletion: Approximation and Optimal FPT Algorithms

  Let F be a finite set of graphs. In the F-Deletion problem, we are given an
n-vertex, m-edge graph G and an integer k as input, and asked whether at most k
vertices can be deleted from G such that the resulting graph does not contain a
graph from F as a minor. F-Deletion is a generic problem and by selecting
different sets of forbidden minors F, one can obtain various fundamental
problems such as Vertex Cover, Feedback Vertex Set or Treewidth t-Deletion.
  In this paper we obtain a number of generic algorithmic results about Planar
F-Deletion, when F contains at least one planar graph. The highlights of our
work are
  - A randomized O(nm) time constant factor approximation algorithm for the
optimization version of Planar F-Deletion.
  - A randomized O(2^{O(k)} n) time parameterized algorithm for Planar
F-Deletion when F is connected. Here a family F is called connected if every
graph in F is connected. The algorithm can be made deterministic at the cost of
making the polynomial factor in the running time n\log^2 n rather than linear.
  These algorithms unify, generalize, and improve over a multitude of results
in the literature. Our main results have several direct applications, but also
the methods we develop on the way have applicability beyond the scope of this
paper. Our results -- constant factor approximation and FPT algorithms -- are
stringed together by a common theme of polynomial time preprocessing.


Faster Exact and Parameterized Algorithm for Feedback Vertex Set in
  Tournaments

  A tournament is a directed graph T such that every pair of vertices are
connected by an arc. A feedback vertex set is a set S of vertices in T such
that T - S is acyclic. In this article we consider the Feedback Vertex Set
problem in tournaments. Here input is a tournament T and integer k, and the
task is to determine whether T has a feedback vertex set of size at most k. We
give a new algorithm for Feedback Vertex Set in Tournaments. The running time
of our algorithm is upper bounded by O(1.618^k + n^{O(1)}) and by O(1.46^n).
Thus our algorithm simultaneously improves over the fastest known parameterized
algorithm for the problem by Dom et al. running in time O(2^kk^{O(1)} +
n^{O(1)}), and the fastest known exact exponential time algorithm by Gaspers
and Mnich with running time O(1.674^n).
  On the way to prove our main result we prove a new partitioning theorem for
undirected graphs. In particular we show that the vertices of any undirected
m-edge graph of maximum degree d can be colored white or black in such a way
that for each of the two colors, the number of edges with both endpoints of
that color is between m/4-d/2 and m/4+d/4.


Clustering with Local Restrictions

  We study a family of graph clustering problems where each cluster has to
satisfy a certain local requirement. Formally, let $\mu$ be a function on the
subsets of vertices of a graph $G$. In the $(\mu,p,q)$-PARTITION problem, the
task is to find a partition of the vertices into clusters where each cluster
$C$ satisfies the requirements that (1) at most $q$ edges leave $C$ and (2)
$\mu(C)\le p$. Our first result shows that if $\mu$ is an {\em arbitrary}
polynomial-time computable monotone function, then $(\mu,p,q)$-PARTITION can be
solved in time $n^{O(q)}$, i.e., it is polynomial-time solvable {\em for every
fixed $q$}. We study in detail three concrete functions $\mu$ (the number of
vertices in the cluster, number of nonedges in the cluster, maximum number of
non-neighbors a vertex has in the cluster), which correspond to natural
clustering problems. For these functions, we show that $(\mu,p,q)$-PARTITION
can be solved in time $2^{O(p)}\cdot n^{O(1)}$ and in time $2^{O(q)}\cdot
n^{O(1)}$ on $n$-vertex graphs, i.e., the problem is fixed-parameter tractable
parameterized by $p$ or by $q$.


Slightly Superexponential Parameterized Problems

  A central problem in parameterized algorithms is to obtain algorithms
  with running time $f(k)\cdot n^{O(1)}$ such that $f$ is as slow growing
function of the parameter $k$ as possible. In particular, a large number of
basic parameterized problems admit parameterized algorithms where $f(k)$ is
single-exponential, that is, $c^k$ for some constant $c$, which makes aiming
for such a running time a natural goal for other problems as well. However
there are still plenty of problems where the $f(k)$ appearing in the best known
running time is worse than single-exponential and it remained ``slightly
superexponential'' even after serious attempts to bring it down. A natural
question to ask is whether the $f(k)$ appearing in the running time of the
best-known algorithms is optimal for any of these problems.
  In this paper, we examine parameterized problems where $f(k)$ is
$k^{O(k)}=2^{O(k\log k)}$ in the best known running time and for a number of
such problems, we show that the dependence on $k$ in the running time cannot be
improved to single exponential. (See paper for the longer abstract.)


Bidimensionality and EPTAS

  Bidimensionality theory is a powerful framework for the development of
metaalgorithmic techniques. It was introduced by Demaine et al. as a tool to
obtain sub-exponential time parameterized algorithms for problems on H-minor
free graphs. Demaine and Hajiaghayi extended the theory to obtain PTASs for
bidimensional problems, and subsequently improved these results to EPTASs.
Fomin et. al related the theory to the existence of linear kernels for
parameterized problems. In this paper we revisit bidimensionality theory from
the perspective of approximation algorithms and redesign the framework for
obtaining EPTASs to be more powerful, easier to apply and easier to understand.
  Two of the most widely used approaches to obtain PTASs on planar graphs are
the Lipton-Tarjan separator based approach, and Baker's approach. Demaine and
Hajiaghayi strengthened both approaches using bidimensionality and obtained
EPTASs for a multitude of problems. We unify the two strenghtened approaches to
combine the best of both worlds. At the heart of our framework is a
decomposition lemma which states that for "most" bidimensional problems, there
is a polynomial time algorithm which given an H-minor-free graph G as input and
an e > 0 outputs a vertex set X of size e * OPT such that the treewidth of G n
X is f(e). Here, OPT is the objective function value of the problem in question
and f is a function depending only on e. This allows us to obtain EPTASs on
(apex)-minor-free graphs for all problems covered by the previous framework, as
well as for a wide range of packing problems, partial covering problems and
problems that are neither closed under taking minors, nor contractions. To the
best of our knowledge for many of these problems including cycle packing,
vertex-h-packing, maximum leaf spanning tree, and partial r-dominating set no
EPTASs on planar graphs were previously known.


Faster Parameterized Algorithms using Linear Programming

  We investigate the parameterized complexity of Vertex Cover parameterized by
the difference between the size of the optimal solution and the value of the
linear programming (LP) relaxation of the problem. By carefully analyzing the
change in the LP value in the branching steps, we argue that combining
previously known preprocessing rules with the most straightforward branching
algorithm yields an $O^*((2.618)^k)$ algorithm for the problem. Here $k$ is the
excess of the vertex cover size over the LP optimum, and we write $O^*(f(k))$
for a time complexity of the form $O(f(k)n^{O(1)})$, where $f (k)$ grows
exponentially with $k$. We proceed to show that a more sophisticated branching
algorithm achieves a runtime of $O^*(2.3146^k)$.
  Following this, using known and new reductions, we give $O^*(2.3146^k)$
algorithms for the parameterized versions of Above Guarantee Vertex Cover, Odd
Cycle Transversal, Split Vertex Deletion and Almost 2-SAT, and an
$O^*(1.5214^k)$ algorithm for Ko\"nig Vertex Deletion, Vertex Cover Param by
OCT and Vertex Cover Param by KVD. These algorithms significantly improve the
best known bounds for these problems. The most notable improvement is the new
bound for Odd Cycle Transversal - this is the first algorithm which beats the
dependence on $k$ of the seminal $O^*(3^k)$ algorithm of Reed, Smith and Vetta.
Finally, using our algorithm, we obtain a kernel for the standard
parameterization of Vertex Cover with at most $2k - c \log k$ vertices. Our
kernel is simpler than previously known kernels achieving the same size bound.


Subexponential-time Algorithms for Maximum Independent Set in $P_t$-free
  and Broom-free Graphs

  In algorithmic graph theory, a classic open question is to determine the
complexity of the Maximum Independent Set problem on $P_t$-free graphs, that
is, on graphs not containing any induced path on $t$ vertices. So far,
polynomial-time algorithms are known only for $t\le 5$ [Lokshtanov et al., SODA
2014, 570--581, 2014], and an algorithm for $t=6$ announced recently [Grzesik
et al. Arxiv 1707.05491, 2017]. Here we study the existence of
subexponential-time algorithms for the problem: we show that for any $t\ge 1$,
there is an algorithm for Maximum Independent Set on $P_t$-free graphs whose
running time is subexponential in the number of vertices. Even for the weighted
version MWIS, the problem is solvable in $2^{O(\sqrt {tn \log n})}$ time on
$P_t$-free graphs. For approximation of MIS in broom-free graphs, a similar
time bound is proved.
  Scattered Set is the generalization of Maximum Independent Set where the
vertices of the solution are required to be at distance at least $d$ from each
other. We give a complete characterization of those graphs $H$ for which
$d$-Scattered Set on $H$-free graphs can be solved in time subexponential in
the size of the input (that is, in the number of vertices plus the number of
edges): If every component of $H$ is a path, then $d$-Scattered Set on $H$-free
graphs with $n$ vertices and $m$ edges can be solved in time
$2^{O(|V(H)|\sqrt{n+m}\log (n+m))}$, even if $d$ is part of the input.
Otherwise, assuming the Exponential-Time Hypothesis (ETH), there is no
$2^{o(n+m)}$-time algorithm for $d$-Scattered Set for any fixed $d\ge 3$ on
$H$-free graphs with $n$-vertices and $m$-edges.


(Meta) Kernelization

  In a parameterized problem, every instance I comes with a positive integer k.
The problem is said to admit a polynomial kernel if, in polynomial time, one
can reduce the size of the instance I to a polynomial in k, while preserving
the answer. In this work we give two meta-theorems on kernelzation. The first
theorem says that all problems expressible in Counting Monadic Second Order
Logic and satisfying a coverability property admit a polynomial kernel on
graphs of bounded genus. Our second result is that all problems that have
finite integer index and satisfy a weaker coverability property admit a linear
kernel on graphs of bounded genus. These theorems unify and extend all
previously known kernelization results for planar graph problems.


Obtaining a Bipartite Graph by Contracting Few Edges

  We initiate the study of the Bipartite Contraction problem from the
perspective of parameterized complexity. In this problem we are given a graph
$G$ and an integer $k$, and the task is to determine whether we can obtain a
bipartite graph from $G$ by a sequence of at most $k$ edge contractions. Our
main result is an $f(k) n^{O(1)}$ time algorithm for Bipartite Contraction.
Despite a strong resemblance between Bipartite Contraction and the classical
Odd Cycle Transversal (OCT) problem, the methods developed to tackle OCT do not
seem to be directly applicable to Bipartite Contraction. Our algorithm is based
on a novel combination of the irrelevant vertex technique, introduced by
Robertson and Seymour, and the concept of important separators. Both techniques
have previously been used as key components of algorithms for fundamental
problems in parameterized complexity. However, to the best of our knowledge,
this is the first time the two techniques are applied in unison.


Fixed-parameter tractable canonization and isomorphism test for graphs
  of bounded treewidth

  We give a fixed-parameter tractable algorithm that, given a parameter $k$ and
two graphs $G_1,G_2$, either concludes that one of these graphs has treewidth
at least $k$, or determines whether $G_1$ and $G_2$ are isomorphic. The running
time of the algorithm on an $n$-vertex graph is $2^{O(k^5\log k)}\cdot n^5$,
and this is the first fixed-parameter algorithm for Graph Isomorphism
parameterized by treewidth.
  Our algorithm in fact solves the more general canonization problem. We namely
design a procedure working in $2^{O(k^5\log k)}\cdot n^5$ time that, for a
given graph $G$ on $n$ vertices, either concludes that the treewidth of $G$ is
at least $k$, or: * finds in an isomorphic-invariant way a graph
$\mathfrak{c}(G)$ that is isomorphic to $G$; * finds an isomorphism-invariant
construction term --- an algebraic expression that encodes $G$ together with a
tree decomposition of $G$ of width $O(k^4)$.
  Hence, the isomorphism test reduces to verifying whether the computed
isomorphic copies or the construction terms for $G_1$ and $G_2$ are equal.


On the Threshold of Intractability

  We study the computational complexity of the graph modification problems
Threshold Editing and Chain Editing, adding and deleting as few edges as
possible to transform the input into a threshold (or chain) graph. In this
article, we show that both problems are NP-complete, resolving a conjecture by
Natanzon, Shamir, and Sharan (Discrete Applied Mathematics, 113(1):109--128,
2001). On the positive side, we show the problem admits a quadratic vertex
kernel. Furthermore, we give a subexponential time parameterized algorithm
solving Threshold Editing in $2^{O(\surd k \log k)} + \text{poly}(n)$ time,
making it one of relatively few natural problems in this complexity class on
general graphs. These results are of broader interest to the field of social
network analysis, where recent work of Brandes (ISAAC, 2014) posits that the
minimum edit distance to a threshold graph gives a good measure of consistency
for node centralities. Finally, we show that all our positive results extend to
the related problem of Chain Editing, as well as the completion and deletion
variants of both problems.


Minimum Bisection is fixed parameter tractable

  In the classic Minimum Bisection problem we are given as input a graph $G$
and an integer $k$. The task is to determine whether there is a partition of
$V(G)$ into two parts $A$ and $B$ such that $||A|-|B|| \leq 1$ and there are at
most $k$ edges with one endpoint in $A$ and the other in $B$. In this paper we
give an algorithm for Minimum Bisection with running time $O(2^{O(k^{3})}n^3
\log^3 n)$. This is the first fixed parameter tractable algorithm for Minimum
Bisection. At the core of our algorithm lies a new decomposition theorem that
states that every graph $G$ can be decomposed by small separators into parts
where each part is "highly connected" in the following sense: any cut of
bounded size can separate only a limited number of vertices from each part of
the decomposition. Our techniques generalize to the weighted setting, where we
seek for a bisection of minimum weight among solutions that contain at most $k$
edges.


SeeSite: Efficiently Finding Co-occurring Splice Sites and Exon Splicing
  Enhancers

  The problem of identifying splice sites consists of two sub-problems: finding
their boundaries, and characterizing their sequence markers. Other splicing
elements---including, enhancers and silencers---that occur in the intronic and
exonic regions play an important role in splicing activity. Existing methods
for detecting splicing elements are limited to finding either splice sites or
enhancers and silencers, even though these elements are well-known to co-occur.
We introduce SeeSite, an efficient and accurate tool for detecting splice sites
and their complementary exon splicing enhancers (ESEs).
  SeeSite has three stages: graph construction, finding dense subgraphs, and
recovering splice sites and ESEs along with their consensus. The third step
involves solving Consensus Sequence with Outliers, an NP-complete string
clustering problem. We prove that our algorithm for this problem outputs
near-optimal solutions in polynomial time. Using SeeSite we demonstrate that
ESEs are preferentially associated with weaker splice sites, and splice sites
of a certain canonical form co-occur with specific ESEs.


Parameterized Complexity and Approximability of Directed Odd Cycle
  Transversal

  A directed odd cycle transversal of a directed graph (digraph) $D$ is a
vertex set $S$ that intersects every odd directed cycle of $D$. In the Directed
Odd Cycle Transversal (DOCT) problem, the input consists of a digraph $D$ and
an integer $k$. The objective is to determine whether there exists a directed
odd cycle transversal of $D$ of size at most $k$.
  In this paper, we settle the parameterized complexity of DOCT when
parameterized by the solution size $k$ by showing that DOCT does not admit an
algorithm with running time $f(k)n^{O(1)}$ unless FPT = W[1]. On the positive
side, we give a factor $2$ fixed parameter tractable (FPT) approximation
algorithm for the problem. More precisely, our algorithm takes as input $D$ and
$k$, runs in time $2^{O(k^2)}n^{O(1)}$, and either concludes that $D$ does not
have a directed odd cycle transversal of size at most $k$, or produces a
solution of size at most $2k$. Finally, we provide evidence that there exists
$\epsilon > 0$ such that DOCT does not admit a factor $(1+\epsilon)$
FPT-approximation algorithm.


Finding, Hitting and Packing Cycles in Subexponential Time on Unit Disk
  Graphs

  We give algorithms with running time $2^{O({\sqrt{k}\log{k}})} \cdot
n^{O(1)}$ for the following problems. Given an $n$-vertex unit disk graph $G$
and an integer $k$, decide whether $G$ contains (1) a path on exactly/at least
$k$ vertices, (2) a cycle on exactly $k$ vertices, (3) a cycle on at least $k$
vertices, (4) a feedback vertex set of size at most $k$, and (5) a set of $k$
pairwise vertex-disjoint cycles. For the first three problems, no
subexponential time parameterized algorithms were previously known. For the
remaining two problems, our algorithms significantly outperform the previously
best known parameterized algorithms that run in time $2^{O(k^{0.75}\log{k})}
\cdot n^{O(1)}$. Our algorithms are based on a new kind of tree decompositions
of unit disk graphs where the separators can have size up to $k^{O(1)}$ and
there exists a solution that crosses every separator at most $O(\sqrt{k})$
times. The running times of our algorithms are optimal up to the $\log{k}$
factor in the exponent, assuming the Exponential Time Hypothesis.


Tree Deletion Set has a Polynomial Kernel (but no OPT^O(1)
  approximation)

  In the Tree Deletion Set problem the input is a graph G together with an
integer k. The objective is to determine whether there exists a set S of at
most k vertices such that G-S is a tree. The problem is NP-complete and even
NP-hard to approximate within any factor of OPT^c for any constant c. In this
paper we give a O(k^4) size kernel for the Tree Deletion Set problem. To the
best of our knowledge our result is the first counterexample to the
"conventional wisdom" that kernelization algorithms automatically provide
approximation algorithms with approximation ratio close to the size of the
kernel. An appealing feature of our kernelization algorithm is a new algebraic
reduction rule that we use to handle the instances on which Tree Deletion Set
is hard to approximate.


Lower bounds for approximation schemes for Closest String

  In the Closest String problem one is given a family $\mathcal S$ of
equal-length strings over some fixed alphabet, and the task is to find a string
$y$ that minimizes the maximum Hamming distance between $y$ and a string from
$\mathcal S$. While polynomial-time approximation schemes (PTASes) for this
problem are known for a long time [Li et al., J. ACM'02], no efficient
polynomial-time approximation scheme (EPTAS) has been proposed so far. In this
paper, we prove that the existence of an EPTAS for Closest String is in fact
unlikely, as it would imply that $\mathrm{FPT}=\mathrm{W}[1]$, a highly
unexpected collapse in the hierarchy of parameterized complexity classes. Our
proof also shows that the existence of a PTAS for Closest String with running
time $f(\varepsilon)\cdot n^{o(1/\varepsilon)}$, for any computable function
$f$, would contradict the Exponential Time Hypothesis.


A Linear Time Parameterized Algorithm for Node Unique Label Cover

  The optimization version of the Unique Label Cover problem is at the heart of
the Unique Games Conjecture which has played an important role in the proof of
several tight inapproximability results. In recent years, this problem has been
also studied extensively from the point of view of parameterized complexity.
Cygan et al. [FOCS 2012] proved that this problem is fixed-parameter tractable
(FPT) and Wahlstr\"om [SODA 2014] gave an FPT algorithm with an improved
parameter dependence. Subsequently, Iwata, Wahlstr\"om and Yoshida [2014]
proved that the edge version of Unique Label Cover can be solved in linear
FPT-time. That is, there is an FPT algorithm whose dependence on the input-size
is linear. However, such an algorithm for the node version of the problem was
left as an open problem. In this paper, we resolve this question by presenting
the first linear-time FPT algorithm for Node Unique Label Cover.


Below all subsets for Minimal Connected Dominating Set

  A vertex subset $S$ in a graph $G$ is a dominating set if every vertex not
contained in $S$ has a neighbor in $S$. A dominating set $S$ is a connected
dominating set if the subgraph $G[S]$ induced by $S$ is connected. A connected
dominating set $S$ is a minimal connected dominating set if no proper subset of
$S$ is also a connected dominating set. We prove that there exists a constant
$\varepsilon > 10^{-50}$ such that every graph $G$ on $n$ vertices has at most
$O(2^{(1-\varepsilon)n})$ minimal connected dominating sets. For the same
$\varepsilon$ we also give an algorithm with running time
$2^{(1-\varepsilon)n}\cdot n^{O(1)}$ to enumerate all minimal connected
dominating sets in an input graph $G$.


Feedback Vertex Set Inspired Kernel for Chordal Vertex Deletion

  Given a graph $G$ and a parameter $k$, the Chordal Vertex Deletion (CVD)
problem asks whether there exists a subset $U\subseteq V(G)$ of size at most
$k$ that hits all induced cycles of size at least 4. The existence of a
polynomial kernel for CVD was a well-known open problem in the field of
Parameterized Complexity. Recently, Jansen and Pilipczuk resolved this question
affirmatively by designing a polynomial kernel for CVD of size
$O(k^{161}\log^{58}k)$, and asked whether one can design a kernel of size
$O(k^{10})$. While we do not completely resolve this question, we design a
significantly smaller kernel of size $O(k^{12}\log^{10}k)$, inspired by the
$O(k^2)$-size kernel for Feedback Vertex Set. Furthermore, we introduce the
notion of the independence degree of a vertex, which is our main conceptual
contribution.


Covering vectors by spaces: Regular matroids

  Seymour's decomposition theorem for regular matroids is a fundamental result
with a number of combinatorial and algorithmic applications. In this work we
demonstrate how this theorem can be used in the design of parameterized
algorithms on regular matroids. We consider the problem of covering a set of
vectors of a given finite dimensional linear space (vector space) by a subspace
generated by a set of vectors of minimum size. Specifically, in the Space Cover
problem, we are given a matrix M and a subset of its columns T; the task is to
find a minimum set F of columns of M disjoint with T such that that the linear
span of F contains all vectors of T. For graphic matroids this problem is
essentially Stainer Forest and for cographic matroids this is a generalization
of Multiway Cut. Our main result is the algorithm with running time
2^{O(k)}||M|| ^{O(1)} solving Space Cover in the case when M is a totally
unimodular matrix over rationals, where k is the size of F. In other words, we
show that on regular matroids the problem is fixed-parameter tractable
parameterized by the rank of the covering subspace.


Balanced Judicious Partition is Fixed-Parameter Tractable

  The family of judicious partitioning problems, introduced by Bollob\'as and
Scott to the field of extremal combinatorics, has been extensively studied from
a structural point of view for over two decades. This rich realm of problems
aims to counterbalance the objectives of classical partitioning problems such
as Min Cut, Min Bisection and Max Cut. While these classical problems focus
solely on the minimization/maximization of the number of edges crossing the
cut, judicious (bi)partitioning problems ask the natural question of the
minimization/maximization of the number of edges lying in the (two) sides of
the cut. In particular, Judicious Bipartition (JB) seeks a bipartition that is
"judicious" in the sense that neither side is burdened by too many edges, and
Balanced JB also requires that the sizes of the sides themselves are "balanced"
in the sense that neither of them is too large. Both of these problems were
defined in the work by Bollob\'as and Scott, and have received notable
scientific attention since then. In this paper, we shed light on the study of
judicious partitioning problems from the viewpoint of algorithm design.
Specifically, we prove that BJB is FPT (which also proves that JB is FPT).


Reducing CMSO Model Checking to Highly Connected Graphs

  Given a Counting Monadic Second Order (CMSO) sentence $\psi$, the
CMSO$[\psi]$ problem is defined as follows. The input to CMSO$[\psi]$ is a
graph $G$, and the objective is to determine whether $G\models \psi$. Our main
theorem states that for every CMSO sentence $\psi$, if CMSO$[\psi]$ is solvable
in polynomial time on "globally highly connected graphs", then CMSO$[\psi]$ is
solvable in polynomial time (on general graphs). We demonstrate the utility of
our theorem in the design of parameterized algorithms. Specifically we show
that technical problem-specific ingredients of a powerful method for designing
parameterized algorithms, recursive understanding, can be replaced by a
black-box invocation of our main theorem. We also show that our theorem can be
easily deployed to show fixed parameterized tractability of a wide range of
problems, where the input is a graph $G$ and the task is to find a connected
induced subgraph of $G$ such that "few" vertices in this subgraph have
neighbors outside the subgraph, and additionally the subgraph has a
CMSO-definable property.


A New Perspective on FO Model Checking of Dense Graph Classes

  We study the first-order (FO) model checking problem of dense graphs, namely
those which have FO interpretations in (or are FO transductions of) some sparse
graph classes. We give a structural characterization of the graph classes which
are FO interpretable in graphs of bounded degree. This characterization allows
us to efficiently compute such an FO interpretation for an input graph. As a
consequence, we obtain an FPT algorithm for successor-invariant FO model
checking of any graph class which is FO interpretable in (or an FO transduction
of) a graph class of bounded degree. The approach we use to obtain these
results may also be of independent interest.


The Parameterized Complexity of Finding Point Sets with Hereditary
  Properties

  We consider problems where the input is a set of points in the plane and an
integer $k$, and the task is to find a subset $S$ of the input points of size
$k$ such that $S$ satisfies some property. We focus on properties that depend
only on the order type of the points and are monotone under point removals. We
show that not all such problems are fixed-parameter tractable parameterized by
$k$, by exhibiting a property defined by three forbidden patterns for which
finding a $k$-point subset with the property is $\mathrm{W}[1]$-complete and
(assuming the exponential time hypothesis) cannot be solved in time
$n^{o(k/\log k)}$. However, we show that problems of this type are
fixed-parameter tractable for all properties that include all collinear point
sets, properties that exclude at least one convex polygon, and properties
defined by a single forbidden pattern.


A 2-Approximation Algorithm for Feedback Vertex Set in Tournaments

  A {\em tournament} is a directed graph $T$ such that every pair of vertices
is connected by an arc. A {\em feedback vertex set} is a set $S$ of vertices in
$T$ such that $T - S$ is acyclic. We consider the {\sc Feedback Vertex Set}
problem in tournaments. Here the input is a tournament $T$ and a weight
function $w : V(T) \rightarrow \mathbb{N}$ and the task is to find a feedback
vertex set $S$ in $T$ minimizing $w(S) = \sum_{v \in S} w(v)$. We give the
first polynomial time factor $2$ approximation algorithm for this problem.
Assuming the Unique Games conjecture, this is the best possible approximation
ratio achievable in polynomial time.


Kernel(s) for Problems With no Kernel: On Out-Trees With Many Leaves

  The {\sc $k$-Leaf Out-Branching} problem is to find an out-branching (i.e. a
rooted oriented spanning tree) with at least $k$ leaves in a given digraph. The
problem has recently received much attention from the viewpoint of
parameterized algorithms {alonLNCS4596,AlonFGKS07fsttcs,BoDo2,KnLaRo}. In this
paper we step aside and take a kernelization based approach to the {\sc
$k$-Leaf-Out-Branching} problem. We give the first polynomial kernel for {\sc
Rooted $k$-Leaf-Out-Branching}, a variant of {\sc $k$-Leaf-Out-Branching} where
the root of the tree searched for is also a part of the input. Our kernel has
cubic size and is obtained using extremal combinatorics.
  For the {\sc $k$-Leaf-Out-Branching} problem we show that no polynomial
kernel is possible unless polynomial hierarchy collapses to third level
%$PH=\Sigma_p^3$ by applying a recent breakthrough result by Bodlaender et al.
{BDFH08} in a non-trivial fashion. However our positive results for {\sc Rooted
$k$-Leaf-Out-Branching} immediately imply that the seemingly intractable the
{\sc $k$-Leaf-Out-Branching} problem admits a data reduction to $n$ independent
$O(k^3)$ kernels. These two results, tractability and intractability side by
side, are the first separating {\it many-to-one kernelization} from {\it Turing
kernelization}. This answers affirmatively an open problem regarding "cheat
kernelization" raised in {IWPECOPEN08}.


Subexponential parameterized algorithms for planar and apex-minor-free
  graphs via low treewidth pattern covering

  We prove the following theorem. Given a planar graph $G$ and an integer $k$,
it is possible in polynomial time to randomly sample a subset $A$ of vertices
of $G$ with the following properties: (i) $A$ induces a subgraph of $G$ of
treewidth $\mathcal{O}(\sqrt{k}\log k)$, and (ii) for every connected subgraph
$H$ of $G$ on at most $k$ vertices, the probability that $A$ covers the whole
vertex set of $H$ is at least $(2^{\mathcal{O}(\sqrt{k}\log^2 k)}\cdot
n^{\mathcal{O}(1)})^{-1}$, where $n$ is the number of vertices of $G$.
  Together with standard dynamic programming techniques for graphs of bounded
treewidth, this result gives a versatile technique for obtaining (randomized)
subexponential parameterized algorithms for problems on planar graphs, usually
with running time bound $2^{\mathcal{O}(\sqrt{k} \log^2 k)}
n^{\mathcal{O}(1)}$. The technique can be applied to problems expressible as
searching for a small, connected pattern with a prescribed property in a large
host graph, examples of such problems include Directed $k$-Path, Weighted
$k$-Path, Vertex Cover Local Search, and Subgraph Isomorphism, among others. Up
to this point, it was open whether these problems can be solved in
subexponential parameterized time on planar graphs, because they are not
amenable to the classic technique of bidimensionality. Furthermore, all our
results hold in fact on any class of graphs that exclude a fixed apex graph as
a minor, in particular on graphs embeddable in any fixed surface.


Beyond Bidimensionality: Parameterized Subexponential Algorithms on
  Directed Graphs

  We develop two different methods to achieve subexponential time parameterized
algorithms for problems on sparse directed graphs. We exemplify our approaches
with two well studied problems.
  For the first problem, {\sc $k$-Leaf Out-Branching}, which is to find an
oriented spanning tree with at least $k$ leaves, we obtain an algorithm solving
the problem in time $2^{O(\sqrt{k} \log k)} n+ n^{O(1)}$ on directed graphs
whose underlying undirected graph excludes some fixed graph $H$ as a minor. For
the special case when the input directed graph is planar, the running time can
be improved to $2^{O(\sqrt{k})}n + n^{O(1)}$. The second example is a
generalization of the {\sc Directed Hamiltonian Path} problem, namely {\sc
$k$-Internal Out-Branching}, which is to find an oriented spanning tree with at
least $k$ internal vertices. We obtain an algorithm solving the problem in time
$2^{O(\sqrt{k} \log k)} + n^{O(1)}$ on directed graphs whose underlying
undirected graph excludes some fixed apex graph $H$ as a minor. Finally, we
observe that for any $\epsilon>0$, the {\sc $k$-Directed Path} problem is
solvable in time $O((1+\epsilon)^k n^{f(\epsilon)})$, where $f$ is some
function of $\ve$.
  Our methods are based on non-trivial combinations of obstruction theorems for
undirected graphs, kernelization, problem specific combinatorial structures and
a layering technique similar to the one employed by Baker to obtain PTAS for
planar graphs.


Hitting forbidden minors: Approximation and Kernelization

  We study a general class of problems called F-deletion problems. In an
F-deletion problem, we are asked whether a subset of at most $k$ vertices can
be deleted from a graph $G$ such that the resulting graph does not contain as a
minor any graph from the family F of forbidden minors.
  We obtain a number of algorithmic results on the F-deletion problem when F
contains a planar graph. We give (1) a linear vertex kernel on graphs excluding
$t$-claw $K_{1,t}$, the star with $t$ leves, as an induced subgraph, where $t$
is a fixed integer. (2) an approximation algorithm achieving an approximation
ratio of $O(\log^{3/2} OPT)$, where $OPT$ is the size of an optimal solution on
general undirected graphs. Finally, we obtain polynomial kernels for the case
when F contains graph $\theta_c$ as a minor for a fixed integer $c$. The graph
$\theta_c$ consists of two vertices connected by $c$ parallel edges. Even
though this may appear to be a very restricted class of problems it already
encompasses well-studied problems such as {\sc Vertex Cover}, {\sc Feedback
Vertex Set} and Diamond Hitting Set. The generic kernelization algorithm is
based on a non-trivial application of protrusion techniques, previously used
only for problems on topological graph classes.


Contracting Graphs to Paths and Trees

  Vertex deletion and edge deletion problems play a central role in
Parameterized Complexity. Examples include classical problems like Feedback
Vertex Set, Odd Cycle Transversal, and Chordal Deletion. Interestingly, the
study of edge contraction problems of this type from a parameterized
perspective has so far been left largely unexplored. We consider two basic edge
contraction problems, which we call Path-Contractibility and
Tree-Contractibility. Both problems take an undirected graph $G$ and an integer
$k$ as input, and the task is to determine whether we can obtain a path or an
acyclic graph, respectively, by contracting at most $k$ edges of $G$. Our main
contribution is an algorithm with running time $4^{k+O(\log^2 k)} + n^{O(1)}$
for Path-Contractibility and an algorithm with running time $4.88^k n^{O(1)}$
for Tree-Contractibility, based on a novel application of the color coding
technique of Alon, Yuster and Zwick. Furthermore, we show that
Path-Contractibility has a kernel with at most $5k+3$ vertices, while
Tree-Contractibility does not have a polynomial kernel unless coNP $\subseteq$
NP/poly. We find the latter result surprising, because of the strong connection
between Tree-Contractibility and Feedback Vertex Set, which is known to have a
vertex kernel with size $O(k^2)$.


Parameterized Complexity of Directed Steiner Tree on Sparse Graphs

  We study the parameterized complexity of the directed variant of the
classical {\sc Steiner Tree} problem on various classes of directed sparse
graphs. While the parameterized complexity of {\sc Steiner Tree} parameterized
by the number of terminals is well understood, not much is known about the
parameterization by the number of non-terminals in the solution tree. All that
is known for this parameterization is that both the directed and the undirected
versions are W[2]-hard on general graphs, and hence unlikely to be fixed
parameter tractable FPT. The undirected {\sc Steiner Tree} problem becomes FPT
when restricted to sparse classes of graphs such as planar graphs, but the
techniques used to show this result break down on directed planar graphs.
  In this article we precisely chart the tractability border for {\sc Directed
Steiner Tree} (DST) on sparse graphs parameterized by the number of
non-terminals in the solution tree. Specifically, we show that the problem is
fixed parameter tractable on graphs excluding a topological minor, but becomes
W[2]-hard on graphs of degeneracy 2. On the other hand we show that if the
subgraph induced by the terminals is required to be acyclic then the problem
becomes FPT on graphs of bounded degeneracy.
  We further show that our algorithm achieves the best possible running time
dependence on the solution size and degeneracy of the input graph, under
standard complexity theoretic assumptions. Using the ideas developed for DST,
we also obtain improved algorithms for {\sc Dominating Set} on sparse
undirected graphs. These algorithms are asymptotically optimal.


Irrelevant Vertices for the Planar Disjoint Paths Problem

  The Disjoint Paths Problem asks, given a graph $G$ and a set of pairs of
terminals $(s_{1},t_{1}),\ldots,(s_{k},t_{k})$, whether there is a collection
of $k$ pairwise vertex-disjoint paths linking $s_{i}$ and $t_{i}$, for
$i=1,\ldots,k.$ In their $f(k)\cdot n^{3}$ algorithm for this problem,
Robertson and Seymour introduced the irrelevant vertex technique according to
which in every instance of treewidth greater than $g(k)$ there is an
"irrelevant" vertex whose removal creates an equivalent instance of the
problem. This fact is based on the celebrated Unique Linkage Theorem, whose -
very technical - proof gives a function $g(k)$ that is responsible for an
immense parameter dependence in the running time of the algorithm. In this
paper we give a new and self-contained proof of this result that strongly
exploits the combinatorial properties of planar graphs and achieves
$g(k)=O(k^{3/2}\cdot 2^{k}).$ Our bound is radically better than the bounds
known for general graphs.


Parameterized Complexity of Bandwidth on Trees

  The bandwidth of a $n$-vertex graph $G$ is the smallest integer $b$ such that
there exists a bijective function $f : V(G) \rightarrow \{1,...,n\}$, called a
layout of $G$, such that for every edge $uv \in E(G)$, $|f(u) - f(v)| \leq b$.
In the {\sc Bandwidth} problem we are given as input a graph $G$ and integer
$b$, and asked whether the bandwidth of $G$ is at most $b$. We present two
results concerning the parameterized complexity of the {\sc Bandwidth} problem
on trees.
  First we show that an algorithm for {\sc Bandwidth} with running time
$f(b)n^{o(b)}$ would violate the Exponential Time Hypothesis, even if the input
graphs are restricted to be trees of pathwidth at most two. Our lower bound
shows that the classical $2^{O(b)}n^{b+1}$ time algorithm by Saxe [SIAM Journal
on Algebraic and Discrete Methods, 1980] is essentially optimal.
  Our second result is a polynomial time algorithm that given a tree $T$ and
integer $b$, either correctly concludes that the bandwidth of $T$ is more than
$b$ or finds a layout of $T$ of bandwidth at most $b^{O(b)}$. This is the first
parameterized approximation algorithm for the bandwidth of trees.


FO Model Checking on Posets of Bounded Width

  Over the past two decades the main focus of research into first-order (FO)
model checking algorithms have been sparse relational structures-culminating in
the FPT-algorithm by Grohe, Kreutzer and Siebertz for FO model checking of
nowhere dense classes of graphs [STOC'14], with dense structures starting to
attract attention only recently. Bova, Ganian and Szeider [LICS'14] initiated
the study of the complexity of FO model checking on partially ordered sets
(posets). Bova, Ganian and Szeider showed that model checking existential FO
logic is fixed-parameter tractable (FPT) on posets of bounded width, where the
width of a poset is the size of the largest antichain in the poset. The
existence of an FPT algorithm for general FO model checking on posets of
bounded width, however, remained open. We resolve this question in the positive
by giving an algorithm that takes as its input an $n$-element poset $\cal P$ of
width $w$ and an FO logic formula $\phi$, and determines whether $\phi$ holds
on $\cal P$ in time $f(\phi,w)\cdot n^2$.


Bidimensionality and Kernels

  Bidimensionality Theory was introduced by [E.D. Demaine, F.V. Fomin,
M.Hajiaghayi, and D.M. Thilikos. Subexponential parameterized algorithms on
graphs of bounded genus and H-minor-free graphs, J. ACM, 52 (2005),
pp.866--893] as a tool to obtain sub-exponential time parameterized algorithms
on H-minor-free graphs. In [E.D. Demaine and M.Hajiaghayi, Bidimensionality:
new connections between FPT algorithms and PTASs, in Proceedings of the 16th
Annual ACM-SIAM Symposium on Discrete Algorithms (SODA), SIAM, 2005,
pp.590--601] this theory was extended in order to obtain polynomial time
approximation schemes (PTASs) for bidimensional problems. In this work, we
establish a third meta-algorithmic direction for bidimensionality theory by
relating it to the existence of linear kernels for parameterized problems. In
particular, we prove that every minor (respectively contraction) bidimensional
problem that satisfies a separation property and is expressible in Countable
Monadic Second Order Logic (CMSO), admits a linear kernel for classes of graphs
that exclude a fixed graph (respectively an apex graph) H as a minor. Our
results imply that a multitude of bidimensional problems g graph classes. For
most of these problems no polynomial kernels on H-minor-free graphs were known
prior to our work.


On the Ordered List Subgraph Embedding Problems

  In the (parameterized) Ordered List Subgraph Embedding problem (p-OLSE) we
are given two graphs $G$ and $H$, each with a linear order defined on its
vertices, a function $L$ that associates with every vertex in $G$ a list of
vertices in $H$, and a parameter $k$. The question is to decide if we can embed
(one-to-one) a subgraph $S$ of $G$ of $k$ vertices into $H$ such that: (1)
every vertex of $S$ is mapped to a vertex from its associated list, (2) the
linear orders inherited by $S$ and its image under the embedding are respected,
and (3) if there is an edge between two vertices in $S$ then there is an edge
between their images. If we require the subgraph $S$ to be embedded as an
induced subgraph, we obtain the Ordered List Induced Subgraph Embedding problem
(p-OLISE). The p-OLSE and p-OLISE problems model various problems in
Bioinformatics related to structural comparison/alignment of proteins.
  We investigate the complexity of p-OLSE and p-OLISE with respect to the
following structural parameters: the width $\Delta_L$ of the function $L$ (size
of the largest list), and the maximum degree $\Delta_H$ of $H$ and $\Delta_G$
of $G$. In terms of the structural parameters under consideration, we draw a
complete complexity landscape of p-OLSE and p-OLISE (and their optimization
versions) with respect to the computational frameworks of classical complexity,
parameterized complexity, and approximation.


Kernelization and Sparseness: the case of Dominating Set

  We prove that for every positive integer $r$ and for every graph class
$\mathcal G$ of bounded expansion, the $r$-Dominating Set problem admits a
linear kernel on graphs from $\mathcal G$. Moreover, when $\mathcal G$ is only
assumed to be nowhere dense, then we give an almost linear kernel on $\mathcal
G$ for the classic Dominating Set problem, i.e., for the case $r=1$. These
results generalize a line of previous research on finding linear kernels for
Dominating Set and $r$-Dominating Set. However, the approach taken in this
work, which is based on the theory of sparse graphs, is radically different and
conceptually much simpler than the previous approaches.
  We complement our findings by showing that for the closely related Connected
Dominating Set problem, the existence of such kernelization algorithms is
unlikely, even though the problem is known to admit a linear kernel on
$H$-topological-minor-free graphs. Also, we prove that for any somewhere dense
class $\mathcal G$, there is some $r$ for which $r$-Dominating Set is
W[$2$]-hard on $\mathcal G$. Thus, our results fall short of proving a sharp
dichotomy for the parameterized complexity of $r$-Dominating Set on
subgraph-monotone graph classes: we conjecture that the border of tractability
lies exactly between nowhere dense and somewhere dense graph classes.


Reconfiguration on sparse graphs

  A vertex-subset graph problem Q defines which subsets of the vertices of an
input graph are feasible solutions. A reconfiguration variant of a
vertex-subset problem asks, given two feasible solutions S and T of size k,
whether it is possible to transform S into T by a sequence of vertex additions
and deletions such that each intermediate set is also a feasible solution of
size bounded by k. We study reconfiguration variants of two classical
vertex-subset problems, namely Independent Set and Dominating Set. We denote
the former by ISR and the latter by DSR. Both ISR and DSR are PSPACE-complete
on graphs of bounded bandwidth and W[1]-hard parameterized by k on general
graphs. We show that ISR is fixed-parameter tractable parameterized by k when
the input graph is of bounded degeneracy or nowhere-dense. As a corollary, we
answer positively an open question concerning the parameterized complexity of
the problem on graphs of bounded treewidth. Moreover, our techniques generalize
recent results showing that ISR is fixed-parameter tractable on planar graphs
and graphs of bounded degree. For DSR, we show the problem fixed-parameter
tractable parameterized by k when the input graph does not contain large
bicliques, a class of graphs which includes graphs of bounded degeneracy and
nowhere-dense graphs.


Independence and Efficient Domination on $P_6$-free Graphs

  In the Independent set problem, the input is a graph $G$, every vertex has a
non-negative integer weight, and the task is to find a set $S$ of pairwise
non-adjacent vertices, maximizing the total weight of the vertices in $S$. We
give an $n^{O (\log^2 n)}$ time algorithm for this problem on graphs excluding
the path $P_6$ on $6$ vertices as an induced subgraph. Currently, there is no
constant $k$ known for which Independent Set on $P_{k}$-free graphs becomes
NP-complete, and our result implies that if such a $k$ exists, then $k > 6$
unless all problems in NP can be decided in (quasi)polynomial time.
  Using the combinatorial tools that we develop for the above algorithm, we
also give a polynomial-time algorithm for Efficient Dominating Set on
$P_6$-free graphs. In this problem, the input is a graph $G$, every vertex has
an integer weight, and the objective is to find a set $S$ of maximum weight
such that every vertex in $G$ has exactly one vertex in $S$ in its closed
neighborhood, or to determine that no such set exists. Prior to our work, the
class of $P_6$-free graphs was the only class of graphs defined by a single
forbidden induced subgraph on which the computational complexity of Efficient
Dominating Set was unknown.


A faster FPT Algorithm and a smaller Kernel for Block Graph Vertex
  Deletion

  A graph $G$ is called a \emph{block graph} if each maximal $2$-connected
component of $G$ is a clique. In this paper we study the Block Graph Vertex
Deletion from the perspective of fixed parameter tractable (FPT) and
kernelization algorithm. In particular, an input to Block Graph Vertex Deletion
consists of a graph $G$ and a positive integer $k$ and the objective to check
whether there exists a subset $S \subseteq V(G)$ of size at most $k$ such that
the graph induced on $V(G)\setminus S$ is a block graph. In this paper we give
an FPT algorithm with running time $4^kn^{O(1)}$ and a polynomial kernel of
size $O(k^4)$ for Block Graph Vertex Deletion. The running time of our FPT
algorithm improves over the previous best algorithm for the problem that ran in
time $10^kn^{O(1)}$ and the size of our kernel reduces over the previously
known kernel of size $O(k^9)$. Our results are based on a novel connection
between Block Graph Vertex Deletion and the classical {\sc Feedback Vertex Set}
problem in graphs without induced $C_4$ and $K_4-e$. To achieve our results we
also obtain an algorithm for {\sc Weighted Feedback Vertex Set} running in time
$3.618^kn^{O(1)}$ and improving over the running time of previously known
algorithm with running time $5^kn^{O(1)}$.


